<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Neoplus.Framework.Common</name>
    </assembly>
    <members>
        <member name="T:Neoplus.Framework.Common.Watermark">
            <summary>
            WaterMark에 대한 요약 설명입니다.
            </summary>
        </member>
        <member name="M:Neoplus.Framework.Common.Watermark.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Neoplus.Framework.Common.Watermark.CreateWatermarkMessage(System.String,System.String)">
            <summary>
            이미지에 메세지를 추가합니다.
            </summary>
            <param name="originalFile">original file</param>
            <param name="message">watermarking message</param>
            <returns>new image</returns>
        </member>
        <member name="M:Neoplus.Framework.Common.Watermark.CreateWatermarkImage(System.String,System.String)">
            <summary>
            이미지 파일에 지정한 이미지를 추가합니다.
            </summary>
            <param name="originalFile">original file</param>
            <param name="watermarkFile">watermarking image file to original file</param>
            <returns>new image</returns>
        </member>
        <member name="M:Neoplus.Framework.Common.Watermark.InsertMessage(System.String,System.String)">
            <summary>
            이미지에 메세지 추가
            </summary>
            <param name="originalFile"></param>
            <param name="message"></param>
        </member>
        <member name="M:Neoplus.Framework.Common.Watermark.InsertImage(System.String)">
            <summary>
            
            </summary>
            <param name="originalFile"></param>
        </member>
        <member name="P:Neoplus.Framework.Common.Watermark.WatermarkFolder">
            <summary>
            Define a folder to save watermarked image<br/>
            Ex) "c:\watermarkImg\"
            </summary>
        </member>
        <member name="P:Neoplus.Framework.Common.Watermark.NewImgName">
            <summary>
            Define image name to save<br/>
            Ex) "watermarkimg.jpg"
            </summary>
        </member>
        <member name="P:Neoplus.Framework.Common.Watermark.FormatType">
            <summary>
            set image format type
            </summary>
        </member>
        <member name="T:Neoplus.Framework.Common.Format">
            <summary>
            ImageFormat Type enum
            </summary>
        </member>
        <member name="F:Neoplus.Framework.Common.Format.Bmp">
            <summary>
            Bmp image format
            </summary>
        </member>
        <member name="F:Neoplus.Framework.Common.Format.Emf">
            <summary>
            Windows extension meta file
            </summary>
        </member>
        <member name="F:Neoplus.Framework.Common.Format.Exif">
            <summary>
            Exchangalbe image file
            </summary>
        </member>
        <member name="F:Neoplus.Framework.Common.Format.Gif">
            <summary>
            Gif image format
            </summary>
        </member>
        <member name="F:Neoplus.Framework.Common.Format.Icon">
            <summary>
            Windows icon format
            </summary>
        </member>
        <member name="F:Neoplus.Framework.Common.Format.Jpeg">
            <summary>
            Jpeg image format
            </summary>
        </member>
        <member name="F:Neoplus.Framework.Common.Format.MemoryBmp">
            <summary>
            Memory bitmap format
            </summary>
        </member>
        <member name="F:Neoplus.Framework.Common.Format.Png">
            <summary>
            W3C png image format
            </summary>
        </member>
        <member name="F:Neoplus.Framework.Common.Format.Tiff">
            <summary>
            Tift image format
            </summary>
        </member>
        <member name="F:Neoplus.Framework.Common.Format.Wmf">
            <summary>
            Windows meta file
            </summary>
        </member>
        <member name="T:Neoplus.Framework.Common.CompressManager">
            <summary>
            네오플러스 압축지원 라이브러리입니다.
            </summary>
        </member>
        <member name="M:Neoplus.Framework.Common.CompressManager.#ctor">
            <summary>
            생성자...
            </summary>
        </member>
        <member name="M:Neoplus.Framework.Common.CompressManager.CompressStream(ICSharpCode.SharpZipLib.Zip.ZipOutputStream@,System.Web.HttpResponse,Neoplus.Framework.Common.CompressManager.ZipOutputType,System.String,System.String,System.String,Neoplus.Framework.Common.CompressManager.CompressLevel,System.String[],System.DateTime)">
            <summary>
            압축파일 스트림을 만들어서 제공합니다.
            </summary>
            <param name="objStream"></param>
            <param name="httpResponse"></param>
            <param name="zipOutputType"></param>
            <param name="sourceFolder"></param>
            <param name="targetFolder"></param>
            <param name="compressFileName"></param>
            <param name="compressLevel"></param>
            <param name="filenames"></param>
            <param name="compressDateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Neoplus.Framework.Common.CompressManager.CompressFolder(System.String,System.String,Neoplus.Framework.Common.CompressManager.SubFolderInclude)">
            <summary>
            지정한 원본폴더의 파일을 압축한다.<para></para>
            압축파일은 지정한 원본폴더와 동일한 폴더에 생성하여 준다.<para></para>
            압축율은 최대로 자동 설정된다.<para></para>
            파일생성시간은 현재 시간으로 자동 생성된다.
            [0] 생성된 ZIP파일명<para></para>
            [1] 실제경로를 포함한 ZIP파일명<para></para>
            [2] 파일사이즈<para></para>
            </summary>
            <param name="sourceFolder">원본폴더: 압축할 파일이 있는 폴더</param>
            <param name="compressFileName">압축한 ZIP파일명</param>
            <param name="subFolderInclude">압출시 하위 폴더의 파일도 압축할지 여부 선택</param>
            <returns>
            문자열 배열로 결과를 반환합니다.<para></para>
            [0] 생성된 ZIP파일명<para></para>
            [1] 실제경로를 포함한 ZIP파일명<para></para>
            [2] 파일사이즈<para></para>
            </returns>
        </member>
        <member name="M:Neoplus.Framework.Common.CompressManager.CompressFolder(System.String,System.String,System.String,Neoplus.Framework.Common.CompressManager.SubFolderInclude)">
            <summary>
            지정한 폴더의 파일을 압축한다.<para></para>
            지정된 대상폴더에 압축파일을 생성하여 준다.<para></para>
            압축율은 최대로 자동 설정된다.<para></para>
            파일생성시간은 현재 시간으로 자동 생성된다.
            [0] 생성된 ZIP파일명<para></para>
            [1] 실제경로를 포함한 ZIP파일명<para></para>
            [2] 파일사이즈<para></para>
            </summary>
            <param name="sourceFolder">원본폴더: 압축할 파일이 있는 폴더</param>
            <param name="targetFolder">결과물폴더: 압축한 ZIP파일을 저장할 폴더</param>
            <param name="compressFileName">압축한 ZIP파일명</param>
            <param name="subFolderInclude">압출시 하위 폴더의 파일도 압축할지 여부 선택</param>
            <returns>
            문자열 배열로 결과를 반환합니다.<para></para>
            [0] 생성된 ZIP파일명<para></para>
            [1] 실제경로를 포함한 ZIP파일명<para></para>
            [2] 파일사이즈<para></para>
            </returns>
        </member>
        <member name="M:Neoplus.Framework.Common.CompressManager.CompressFolder(System.String,System.String,System.String,Neoplus.Framework.Common.CompressManager.SubFolderInclude,Neoplus.Framework.Common.CompressManager.CompressLevel,System.DateTime)">
            <summary>
            지정한 폴더의 파일을 압축한다.<para></para>
            지정된 대상폴더에 압축파일을 생성하여 준다.<para></para>
            [0] 생성된 ZIP파일명<para></para>
            [1] 실제경로를 포함한 ZIP파일명<para></para>
            [2] 파일사이즈<para></para>
            </summary>
            <param name="sourceFolder">원본폴더: 압축할 파일이 있는 폴더</param>
            <param name="targetFolder">결과물폴더: 압축한 ZIP파일을 저장할 폴더</param>
            <param name="compressFileName">압축한 ZIP파일명</param>
            <param name="subFolderInclude">압출시 하위 폴더의 파일도 압축할지 여부 선택</param>
            <param name="compressLevel">압축 레벨 0~9까지 9가 가장 압축율이 좋은것</param>
            <param name="compressDateTime">압축파일의 생성 시간</param>
            <returns>
            문자열 배열로 결과를 반환합니다.<para></para>
            [0] 생성된 ZIP파일명<para></para>
            [1] 실제경로를 포함한 ZIP파일명<para></para>
            [2] 파일사이즈<para></para>
            </returns>
        </member>
        <member name="M:Neoplus.Framework.Common.CompressManager.CompressFiles(System.String,System.String[],System.String)">
            <summary>
            지정한 폴더내의 선택된 파일만 압축을 실시한다.<para></para>
            지정한 폴더내에 압축파일을 생성하여 준다.<para></para>
            압축율은 최대로 자동 설정된다.<para></para>
            파일생성시간은 현재 시간으로 자동 생성된다.<para></para>
            [0] 생성된 ZIP파일명<para></para>
            [1] 실제경로를 포함한 ZIP파일명<para></para>
            [2] 파일사이즈<para></para>
            </summary>
            <param name="sourceFolder">원본폴더: 압축할 파일이 있는 폴더</param>
            <param name="sourceFiles">압축할 파일명 String배열</param>
            <param name="compressFileName">압축한 ZIP파일명</param>
            <returns></returns>
        </member>
        <member name="M:Neoplus.Framework.Common.CompressManager.CompressFiles(System.String,System.String[],System.String,System.String)">
            <summary>
            지정한 폴더내의 선택된 파일만 압축을 실시한다.<para></para>
            지정한 폴더내에 압축파일을 생성하여 준다.<para></para>
            압축율은 최대로 자동 설정된다.<para></para>
            파일생성시간은 현재 시간으로 자동 생성된다.<para></para>
            [0] 생성된 ZIP파일명<para></para>
            [1] 실제경로를 포함한 ZIP파일명<para></para>
            [2] 파일사이즈<para></para>
            </summary>
            <param name="sourceFolder">원본폴더: 압축할 파일이 있는 폴더</param>
            <param name="sourceFiles">압축할 파일명 String배열</param>
            <param name="targetFolder">결과물폴더: 압축한 ZIP파일을 저장할 폴더</param>
            <param name="compressFileName">압축한 ZIP파일명</param>
            <returns></returns>
        </member>
        <member name="M:Neoplus.Framework.Common.CompressManager.CompressFiles(System.String,System.String[],System.String,System.String,Neoplus.Framework.Common.CompressManager.CompressLevel,System.DateTime)">
            <summary>
            지정한 폴더내의 선택된 파일만 압축을 실시한다.<para></para>
            지정된 대상폴더에 압축파일을 생성하여 준다.<para></para>
            압축율은 최대로 자동 설정된다.<para></para>
            파일생성시간은 현재 시간으로 자동 생성된다.<para></para>
            [0] 생성된 ZIP파일명<para></para>
            [1] 실제경로를 포함한 ZIP파일명<para></para>
            [2] 파일사이즈<para></para>
            </summary>
            <param name="sourceFolder">원본폴더: 압축할 파일이 있는 폴더</param>
            <param name="sourceFiles">압축할 파일명 String배열</param>
            <param name="targetFolder">결과물폴더: 압축한 ZIP파일을 저장할 폴더</param>
            <param name="compressFileName">압축한 ZIP파일명</param>
            <param name="compressLevel">압축 레벨 0~9까지 9가 가장 압축율이 좋은것</param>
            <param name="compressDateTime">압축파일의 생성 시간</param>
            <returns></returns>
        </member>
        <member name="T:Neoplus.Framework.Common.CompressManager.CompressLevel">
            <summary>
            압축율 지정 0~9, 9가 최고압축율입니다.
            </summary>
        </member>
        <member name="T:Neoplus.Framework.Common.CompressManager.SubFolderInclude">
            <summary>
            하위폴더 포함여부 선택
            </summary>
        </member>
        <member name="T:Neoplus.Framework.Common.CompressManager.ZipOutputType">
            <summary>
            압축스트림의 결과물 제공 타입
            </summary>
        </member>
        <member name="T:Neoplus.Framework.Common.Thumbnail">
            <summary>
            
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:Neoplus.Framework.Common.Thumbnail.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:Neoplus.Framework.Common.Thumbnail.AbortThumbnailGeneration">
            <summary>
            
            </summary>		
        </member>
        <member name="M:Neoplus.Framework.Common.Thumbnail.GetThumbnail(System.String,System.Int32)">
            <summary>
            지정한 경로에 있는 이미지 파일을 지정한 비율로 축소한다.<para></para>
            비율은 1~99까지로 지정한다.<para></para>
            </summary>			
        </member>
        <member name="M:Neoplus.Framework.Common.Thumbnail.GetThumbnail(System.String,System.Int32,System.Int32)">
            <summary>
            지정한 경로에 있는 이미지 파일을 지정한 크기로 축소한다.<para></para>
            </summary>			
        </member>
        <member name="M:Neoplus.Framework.Common.Thumbnail.GetThumbnail(System.Drawing.Image,System.Int32)">
            <summary>
            지정한 이미지 객체를 지정한 비율로 축소한다.<para></para>
            비율은 1~99까지로 지정한다.<para></para>
            </summary>			
        </member>
        <member name="M:Neoplus.Framework.Common.Thumbnail.GetThumbnail(System.Drawing.Image,System.Int32,System.Int32)">
            <summary>
            지정한 이미지 객체를 지정한 크기로 축소한다.
            </summary>			
        </member>
        <member name="M:Neoplus.Framework.Common.Thumbnail.GetThumbnail(System.String,System.Int32,System.Boolean)">
            <summary>
            지정한 경로에 있는 이미지파일을 가로,세로중 하나의 크기를 기준으로 축소한다.<para></para>
            bool portrait는 다음과 같이 지정한다. <para></para>
            가로기준으로 축소시 : false<para></para>
            세로기준으로 축소시 : true<para></para>
            </summary>	
        </member>
        <member name="M:Neoplus.Framework.Common.Thumbnail.GetThumbnail(System.Drawing.Image,System.Int32,System.Boolean)">
            <summary>
            지정한 이미지 객체를 가로,세로중 하나의 크기를 기준으로 축소한다.<para></para>
            bool portrait는 다음과 같이 지정한다. <para></para>
            가로기준으로 축소시 : false<para></para>
            세로기준으로 축소시 : true<para></para>
            </summary>	
        </member>
        <member name="T:Neoplus.Framework.Common.ExceptionManager">
            <summary>
            Exception에 대한 요약 설명입니다.
            - 작  성  자 : 김윤식(totoropia@gmail.com) Neoplus<para></para>
            - 최초작성일 : 2009년 04월 16일<para></para>
            - 최초수정자 : <para></para>
            - 최초수정일 : <para></para>
            - 주요변경로그 <para></para>
            </summary>
        </member>
        <member name="M:Neoplus.Framework.Common.ExceptionManager.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Neoplus.Framework.Common.ExceptionManager.GetErrorMessage(System.Exception)">
            <summary>
            예외를 발생시킨 에러 메세지와 위치를 알려주는 메세지를 생성하는 메소드
            </summary>
            <param name="ex">예외 개체</param>
            <returns>반환하는 메시지</returns>
        </member>
        <member name="M:Neoplus.Framework.Common.ExceptionManager.GetUserMessage(System.String,System.Exception)">
            <summary>
            지정된 예외 코드에 따른 메시지를 찾아 반환한다. 없으면 userMessage 반환.
            </summary>
            <param name="userMessage"></param>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="M:Neoplus.Framework.Common.ExceptionManager.GetUserMessageByCode(System.String)">
            <summary>
            지정된 예외 코드에 따른 메시지를 찾아 반환한다. 없으면 userMessage 반환.
            </summary>
            <param name="messageCode"></param>
            <returns></returns>
        </member>
        <member name="M:Neoplus.Framework.Common.ExceptionManager.ParseXmlMessage(System.String,System.Xml.XmlNode)">
            <summary>
            지정된 예외 코드에 따른 메시지를 찾아 반환한다. 없으면 userMessage 반환.
            </summary>
            <param name="messageCode"></param>
            <param name="root"></param>
            <returns></returns>
        </member>
        <member name="M:Neoplus.Framework.Common.ExceptionManager.GetErrorLogMode">
            <summary>
            에러로그를 남길지 여부를 반환합니다.<para></para>
            Web.Config "ErrorLogMode"항목에 on, off로 추적상태를 반환. <para></para>
            - 작  성  자 : 김윤식(totoropia@gmail.com) SmileSoft<para></para>
            - 최초작성일 : 2009년 04월 16일<para></para>
            - 최초수정자 : <para></para>
            - 최초수정일 : <para></para>
            - 주요변경로그 <para></para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Neoplus.Framework.Common.ExceptionManager.GetErrorLogPath">
            <summary>
            에러로그를 저장할 경로를 반환합니다.<para></para>
            Web.Config "ErrorLogPath"항목 로그를 저장할 경로 지정 <para></para>
            - 작  성  자 : 김윤식(totoropia@gmail.com) SmileSoft<para></para>
            - 최초작성일 : 2009년 04월 16일<para></para>
            - 최초수정자 : <para></para>
            - 최초수정일 : <para></para>
            - 주요변경로그 <para></para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Neoplus.Framework.Common.ExceptionManager.GetErrorLogType">
            <summary>
            에러로그를 저장할 형식을 반환합니다.<para></para>
            Web.Config "ErrorLogType"항목 로그를 저장할 방식 지정 <para></para>
            file, event <para></para>
            - 작  성  자 : 김윤식(totoropia@gmail.com) SmileSoft<para></para>
            - 최초작성일 : 2009년 04월 16일<para></para>
            - 최초수정자 : <para></para>
            - 최초수정일 : <para></para>
            - 주요변경로그 <para></para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Neoplus.Framework.Common.ExceptionManager.GetEventLogSource">
            <summary>
            에러로그를 이벤트 로그에 저장할때 범주를 가져옵니다.<para></para>
            Web.Config "EventLogSource"항목 로그를 저장할 방식 지정 <para></para>
            - 작  성  자 : 김윤식(totoropia@gmail.com) SmileSoft<para></para>
            - 최초작성일 : 2009년 04월 16일<para></para>
            - 최초수정자 : <para></para>
            - 최초수정일 : <para></para>
            - 주요변경로그 <para></para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Neoplus.Framework.Common.ExceptionManager.WriteErrorLog(System.Exception,System.String)">
            <summary>
            에러로그를 파일또는 이벤트로그에 남깁니다.<para></para>
            - 작  성  자 : 김윤식(totoropia@gmail.com) SmileSoft<para></para>
            - 최초작성일 : 2009년 04월 16일<para></para>
            - 최초수정자 : <para></para>
            - 최초수정일 : <para></para>
            - 주요변경로그 <para></para>
            </summary>
            <param name="ex"></param>
            <param name="message"></param>
        </member>
        <member name="M:Neoplus.Framework.Common.ExceptionManager.WriteFileLog(System.String,System.String,System.String)">
            <summary>
            로그를 파일로 남긴다.<para></para>
            - 작  성  자 : 김윤식(totoropia@gmail.com) SmileSoft<para></para>
            - 최초작성일 : 2009년 05월 16일<para></para>
            - 최초수정자 : <para></para>
            - 최초수정일 : <para></para>
            - 주요변경로그 <para></para>
            </summary>
            <param name="logFolder"></param>
            <param name="fileName"></param>
            <param name="contents"></param>
        </member>
        <member name="M:Neoplus.Framework.Common.ExceptionManager.WriteEventLog(System.String,System.Diagnostics.EventLogEntryType,System.String)">
             <summary>
            로그를 시스템 이벤트로그에 남긴다.<para></para>
             - 작  성  자 : 김윤식(totoropia@gmail.com) SmileSoft<para></para>
             - 최초작성일 : 2009년 04월 16일<para></para>
             - 최초수정자 : <para></para>
             - 최초수정일 : <para></para>
             - 주요변경로그 <para></para>
             </summary>
             <param name="eventLogSource"></param>
             <param name="logType"></param>
             <param name="contents"></param>
        </member>
        <member name="T:Neoplus.Framework.Common.Constant">
            <summary>
            Constant에 대한 요약 설명입니다.
            </summary>
        </member>
        <member name="T:Neoplus.Framework.Common.StringManager">
            <summary>
            StringManager에 대한 요약 설명입니다.
            </summary>
        </member>
        <member name="M:Neoplus.Framework.Common.StringManager.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Neoplus.Framework.Common.StringManager.Split(System.String,System.String)">
            <summary>
            문자열을 지정한 구분자로 잘라서 문자배열로 반환한다.
            </summary>
            <param name="data"></param>
            <param name="delimiters"></param>
            <returns></returns>
        </member>
        <member name="M:Neoplus.Framework.Common.StringManager.ReadBinaryFile(System.String)">
            <summary>
            파일을 바이너리 형식으로 읽어 들여서 byte로 반환한다.
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Neoplus.Framework.Common.StringManager.ReadImageFile(System.String)">
            <summary>
            이미지 객체를 Byte객체로 읽어 들여 byte로 반환한다.
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Neoplus.Framework.Common.StringManager.ByteArrayToCharArray(System.Byte[])">
            <summary>
            바이너리(Byte)데이터를 읽어들여 캐릭터(char)배열로 반환한다.
            </summary>
            <param name="binaryData"></param>
            <returns></returns>
        </member>
        <member name="M:Neoplus.Framework.Common.StringManager.CharArrayToByteArray(System.Char[])">
            <summary>
            Base64문자배열을 읽어들여 byte로 반환한다.
            </summary>
            <param name="base64CharArray"></param>
            <returns></returns>
        </member>
        <member name="M:Neoplus.Framework.Common.StringManager.Str2Hash(System.String)">
            <summary>
            일반문자열을 Hash Byte[]로 반환한다.
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Neoplus.Framework.Common.StringManager.Str2Key(System.String)">
            <summary>
            일반문자열을 암호화 문자열에 사용할 수 있는 16Byte로 변환하여 반환한다.
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Neoplus.Framework.Common.StringManager.TextFile2DataSet(System.String,System.Int32[],System.Boolean)">
            <summary>
            고정길이로 구성된 텍스트파일을 읽어들여 DataSet으로 변환하여 줍니다.<para></para>
            첫째줄을 DataSet Table의 컬럼명으로 지정할 수 있다.<para></para>
            </summary>
            <param name="filePath"></param>
            <param name="columnLengths"></param>
            <param name="headerVisible"></param>
            <returns></returns>
        </member>
        <member name="M:Neoplus.Framework.Common.StringManager.TextFile2DataSet(System.String,System.String,System.Boolean)">
            <summary>
            구분자를 사용한 텍스트파일을 읽어들여 DataSet으로 변환하여 준다.<para></para>
            첫째줄을 DataSet Table의 컬럼명으로 지정할 수 있다.<para></para>
            </summary>
            <param name="filePath"></param>
            <param name="delimiter"></param>
            <param name="headerVisible"></param>
            <returns></returns>
        </member>
        <member name="M:Neoplus.Framework.Common.StringManager.Excel2DataSet(System.String,System.Boolean)">
            <summary>
            엑셀파일을 읽어들여 데이타셋으로 반환한다.
            </summary>
            <param name="filePath"></param>
            <param name="headerVisible"></param>
            <returns></returns>
        </member>
        <member name="M:Neoplus.Framework.Common.StringManager.ExcelDelete2DataSet(System.String,System.Boolean)">
            <summary>
            엑셀을 DATASET으로 전환후 DELETE 하는 메소드 
            </summary>
            <param name="filePath"></param>
            <param name="headerVisible"></param>
            <returns></returns>
        </member>
        <member name="M:Neoplus.Framework.Common.StringManager.DataTable2TextFile(System.String,System.Data.DataTable,Neoplus.Framework.Common.StringManager.ColumnLengthDelimiter[],System.Boolean)">
            <summary>
            DataTable 의 내용을 텍스트 파일로 변환하여 사용자의 로컬에 저장하는 함수
            </summary>
            <param name="filePath">저장할 경로(사용자가 SaveDialog 등을 활용하여 지정할 수 있도록 한다.)</param>
            <param name="fileName">저장할 파일명(UI 개발자가 업무에 정의된 파일명으로 지정한다.)</param>
            <param name="dt">텍스트 파일에 쓰여질 데이터정보 (UI 개발자가 형식에 맞게 가공하여 넘기도록 한다.)</param>
            <param name="columnLengths">각 열의 고정폭을 정수배열로 지정하여 넘기도록 한다.</param>
            <param name="headerVisible">텍스트 파일에 컬럼명을 쓰게할지 여부를 지정한다. true이면 컬럼명을 텍스트 파일에기입한다.</param>
        </member>
        <member name="M:Neoplus.Framework.Common.StringManager.DataTable2TextFile(System.String,System.Data.DataTable,System.String,System.Boolean)">
            <summary>
            DataTable 의 내용을 텍스트 파일로 변환하여 사용자의 로컬에 저장하는 함수
            </summary>
            <param name="filePath">저장할 경로(사용자가 SaveDialog 등을 활용하여 지정할 수 있도록 한다.)</param>
            <param name="fileName">저장할 파일명(UI 개발자가 업무에 정의된 파일명으로 지정한다.)</param>
            <param name="dt">텍스트 파일에 쓰여질 데이터정보 (UI 개발자가 형식에 맞게 가공하여 넘기도록 한다.)</param>
            <param name="delimiter">컬럼 구분자를 지정한다. 컬럼구분자는 "\t", ";", "," </param>
            <param name="headerVisible">텍스트 파일에 컬럼명을 쓰게할지 여부를 지정한다. true이면 컬럼명을 텍스트 파일에기입한다.</param>
        </member>
        <member name="M:Neoplus.Framework.Common.StringManager.DataTable2Binary(System.Data.DataTable,Neoplus.Framework.Common.StringManager.ColumnLengthDelimiter[],System.Boolean)">
            <summary>
            DataTable 의 내용을 텍스트 포맷으로 변환하여 byte[]로 반환하는 함수
            </summary>
            <param name="dt">텍스트 파일에 쓰여질 데이터정보 (UI 개발자가 형식에 맞게 가공하여 넘기도록 한다.)</param>
            <param name="columnLengths">각 열의 고정폭을 정수배열로 지정하여 넘기도록 한다.</param>
            <param name="headerVisible">텍스트 파일에 컬럼명을 쓰게할지 여부를 지정한다. true이면 컬럼명을 텍스트 파일에기입한다.</param>
            <returns>byte[]</returns>
        </member>
        <member name="M:Neoplus.Framework.Common.StringManager.DataTable2Binary(System.Data.DataTable,System.String,System.Boolean)">
            <summary>
            DataTable 의 내용을 텍스트 포맷으로 변환하여 byte[]로 반환하는 함수
            </summary>
            <param name="dt">텍스트 파일에 쓰여질 데이터정보 (UI 개발자가 형식에 맞게 가공하여 넘기도록 한다.)</param>
            <param name="delimiter">컬럼 구분자를 지정한다. 컬럼구분자는 "\t", ";", "," </param>
            <param name="headerVisible">텍스트 파일에 컬럼명을 쓰게할지 여부를 지정한다. true이면 컬럼명을 텍스트 파일에기입한다.</param>
            <returns>byte[]</returns>
        </member>
        <member name="M:Neoplus.Framework.Common.StringManager.DataTable2String(System.Data.DataTable,System.String,System.Boolean,System.Text.StringBuilder)">
            <summary>
            DataTable의 데이터를 텍스트로 변환한다.
            </summary>
            <param name="dt">DataTable</param>
            <param name="delimiter">열 구분자</param>
            <param name="headerVisible">컬럼헤더를 텍스트에 써야할지 여부</param>
            <param name="sbResult">반환되는 텍스트</param>
            <returns>성공여부(반환되는 텍스트가 없으면 false)</returns>
        </member>
        <member name="M:Neoplus.Framework.Common.StringManager.DataTable2String(System.Data.DataTable,Neoplus.Framework.Common.StringManager.ColumnLengthDelimiter[],System.Boolean,System.Text.StringBuilder)">
            <summary>
            DataTable의 데이터를 텍스트로 변환한다.
            </summary>
            <param name="dt">DataTable</param>
            <param name="columnLengths">고정폭 배열</param>
            <param name="headerVisible">컬럼헤더를 텍스트에 써야할지 여부</param>
            <param name="sbResult">반환되는 텍스트</param>
            <returns>성공여부(반환되는 텍스트가 없으면 false)</returns>
        </member>
        <member name="M:Neoplus.Framework.Common.StringManager.EncodeChar(System.String)">
            <summary>
            DB 인서트 전 문자열 Replace<para></para>
            <example ><![CDATA[ 
            & => &amp;
            < => &lt;
            > => &gt;
            ' => ''
            " => &quot;
            ]]></example>
            </summary>
            <param name="strVal">바꿀 문자열</param>
            <returns>바뀐 문자열</returns>
        </member>
        <member name="M:Neoplus.Framework.Common.StringManager.DecodeChar(System.String)">
            <summary>
            화면 출력 문자열 Replace<para></para>
            <example ><![CDATA[ 
            &amp;  => &
            &lt;   => <
            &gt;   => >
            ''     => '
            &quot; => "
            ]]></example>
            </summary>
            <param name="strVal">바꿀 문자열</param>
            <returns>바뀐 문자열</returns>
        </member>
        <member name="F:Neoplus.Framework.Common.StringManager.FILE_BYTE_ARRAY_DELIMITTER">
            <summary>
            
            </summary>
        </member>
        <member name="M:Neoplus.Framework.Common.StringManager.GetFileStringByFile(System.String[])">
            <summary>
            파일패스 배열을 통해 파일의 byte[]를 만들어 string으로 변환하여 리턴
            </summary>
            <param name="arrFiles">파일패스 배열</param>
            <returns>파일의 byte[]를 변환한 string</returns>
        </member>
        <member name="M:Neoplus.Framework.Common.StringManager.GetSubstring(System.String,System.Int32)">
            <summary>
            첫번째 문자부터 시작하는 부분 문자열을 리턴합니다. (원하는 length가 더 크면 문자열의 끝까지 리턴)<br/>
            </summary>
            <param name="text">문자열</param>
            <param name="length">부분 문자열에 있는 문자의 수입니다.</param>
            <returns></returns>
        </member>
        <member name="M:Neoplus.Framework.Common.StringManager.GetSubstring(System.String,System.Int32,System.Int32)">
            <summary>
            부분 문자열을 리턴합니다. (원하는 length가 더 크면 문자열의 끝까지 리턴)<br/>
            </summary>
            <param name="text">문자열</param>
            <param name="startIndex">부분 문자열의 처음 위치에 대한 인덱스입니다.</param>
            <param name="length">부분 문자열에 있는 문자의 수입니다.</param>
            <returns></returns>
        </member>
        <member name="M:Neoplus.Framework.Common.StringManager.GetSubstring(System.Object,System.Int32,System.Int32)">
            <summary>
            부분 문자열을 리턴합니다. (원하는 length가 더 크면 문자열의 끝까지 리턴)<br/>
            </summary>
            <param name="text">문자열</param>
            <param name="startIndex">부분 문자열의 처음 위치에 대한 인덱스입니다.</param>
            <param name="length">부분 문자열에 있는 문자의 수입니다.</param>
            <returns></returns>
        </member>
        <member name="M:Neoplus.Framework.Common.StringManager.GetSubstring(System.Object,System.Int32)">
            <summary>
            첫번째 문자부터 시작하는 부분 문자열을 리턴합니다. (원하는 length가 더 크면 문자열의 끝까지 리턴)<br/>
            </summary>
            <param name="text">문자열</param>
            <param name="length">부분 문자열에 있는 문자의 수입니다.</param>
            <returns></returns>
        </member>
        <member name="T:Neoplus.Framework.Common.CryptoManager">
            <summary>
            스트링 암/복호화 클래스(대칭 알고리즘 사용)
            </summary>
        </member>
        <member name="M:Neoplus.Framework.Common.CryptoManager.#ctor">
            <summary>
            디폴트 생성자
            </summary>
        </member>
        <member name="M:Neoplus.Framework.Common.CryptoManager.#ctor(Neoplus.Framework.Common.CryptoManager.CryptoTypes)">
            <summary>
            생성자(암/복호화 타입을 지정)
            </summary>
            <param name="CryptoType"></param>
        </member>
        <member name="M:Neoplus.Framework.Common.CryptoManager.Encrypt(System.String)">
            <summary>
            텍스트를 암호화한다.
            </summary>
            <param name="inputText">암호화할 텍스트</param>
            <returns>암호화된 텍스트</returns>
        </member>
        <member name="M:Neoplus.Framework.Common.CryptoManager.Encrypt(System.String,System.String)">
            <summary>
            사용자가 지정한 패스워드로 암호화한다.
            </summary>
            <param name="inputText">암호화할 텍스트</param>
            <param name="password">암호화에 사용할 패스워드</param>
            <returns>암호화된 텍스트</returns>
        </member>
        <member name="M:Neoplus.Framework.Common.CryptoManager.Encrypt(System.String,System.String,Neoplus.Framework.Common.CryptoManager.CryptoTypes)">
            <summary>
            사용자가 지정한 cryptoType과 패스워드로 텍스트를 암호화한다.
            </summary>
            <param name="inputText">암호화할 텍스트</param>
            <param name="password">암호화에 사용할 패스워드</param>
            <param name="cryptoType">암호화 타입</param>
            <returns>암호화된 텍스트</returns>
        </member>
        <member name="M:Neoplus.Framework.Common.CryptoManager.Encrypt(System.String,Neoplus.Framework.Common.CryptoManager.CryptoTypes)">
            <summary>
            사용자가 지정한 cryptoType으로 텍스트를 암호화한다.
            </summary>
            <param name="inputText">암호화할 텍스트</param>
            <param name="cryptoType">암호화 타입</param>
            <returns>암호화된 텍스트</returns>
        </member>
        <member name="M:Neoplus.Framework.Common.CryptoManager.Decrypt(System.String)">
            <summary>
            텍스트를 복호화한다.
            </summary>
            <param name="inputText">복호화할 텍스트</param>
            <returns>복호화된 텍스트</returns>
        </member>
        <member name="M:Neoplus.Framework.Common.CryptoManager.Decrypt(System.String,System.String)">
            <summary>
            사용자가 지정한 패스워드키에 의해 텍스트를 복호화한다.
            </summary>
            <param name="inputText">복호화할 텍스트</param>
            <param name="password">복호화할 때 사용할 패스워드</param>
            <returns>복호화된 텍스트</returns>
        </member>
        <member name="M:Neoplus.Framework.Common.CryptoManager.Decrypt(System.String,System.String,Neoplus.Framework.Common.CryptoManager.CryptoTypes)">
            <summary>
            사용자가 지정한 cryptoType과 패스워드로 텍스트를 복호화한다.
            </summary>
            <param name="inputText">복호화할 텍스트</param>
            <param name="password">복호화에 사용할 패스워드</param>
            <param name="cryptoType">복호화 타입</param>
            <returns>복호화된 텍스트</returns>
        </member>
        <member name="M:Neoplus.Framework.Common.CryptoManager.Decrypt(System.String,Neoplus.Framework.Common.CryptoManager.CryptoTypes)">
            <summary>
            사용자가 지정한 cryptoType으로 텍스트를 복호화한다.
            </summary>
            <param name="inputText">복호화할 텍스트</param>
            <param name="cryptoType">복호화 타입</param>
            <returns>복호화된 텍스트</returns>
        </member>
        <member name="M:Neoplus.Framework.Common.CryptoManager.EncryptDecrypt(System.Byte[],System.Boolean)">
            <summary>
                performs the actual enc/dec.
            </summary>
            <param name="inputBytes">input byte array</param>
            <param name="Encrpyt">wheather or not to perform enc/dec</param>
            <returns>byte array output</returns>
        </member>
        <member name="M:Neoplus.Framework.Common.CryptoManager.getCryptoTransform(System.Boolean)">
            <summary>
                returns the symmetric engine and creates the encyptor/decryptor
            </summary>
            <param name="encrypt">whether to return a encrpytor or decryptor</param>
            <returns>ICryptoTransform</returns>
        </member>
        <member name="M:Neoplus.Framework.Common.CryptoManager.selectAlgorithm">
            <summary>
                returns the specific symmetric algorithm acc. to the cryptotype
            </summary>
            <returns>SymmetricAlgorithm</returns>
        </member>
        <member name="M:Neoplus.Framework.Common.CryptoManager.calculateNewKeyAndIV">
            <summary>
                calculates the key and IV acc. to the symmetric method from the password
                key and IV size dependant on symmetric method
            </summary>
        </member>
        <member name="P:Neoplus.Framework.Common.CryptoManager.CryptoType">
            <summary>
                type of encryption / decryption used
            </summary>
        </member>
        <member name="P:Neoplus.Framework.Common.CryptoManager.Password">
            <summary>
                Passsword Key Property.
                The password key used when encrypting / decrypting
            </summary>
        </member>
        <member name="T:Neoplus.Framework.Common.CryptoManager.CryptoTypes">
            <summary>
            대칭 암/복호화 알고리즘 상수
            </summary>
        </member>
        <member name="T:Neoplus.Framework.Common.Hashing">
            <summary>
            해슁 클래스로 스태틱 멤버만 있다.
            </summary>
        </member>
        <member name="M:Neoplus.Framework.Common.Hashing.Hash(System.String)">
            <summary>
            입력 텍스트를 해슁 알고리즘으로 암호화한다(해슁 알고리즘 MD5)
            </summary>
            <param name="inputText">암호화할 텍스트</param>
            <returns>암호화된 텍스트</returns>
        </member>
        <member name="M:Neoplus.Framework.Common.Hashing.Hash(System.String,Neoplus.Framework.Common.Hashing.HashingTypes)">
            <summary>
            입력 텍스트를 사용자가 지정한 해슁 알고리즘으로 암호화한다.
            </summary>
            <param name="inputText">암호화할 텍스트</param>
            <param name="hashingType">해슁 알고리즘</param>
            <returns>암호화된 텍스트</returns>
        </member>
        <member name="M:Neoplus.Framework.Common.Hashing.isHashEqual(System.String,System.String)">
            <summary>
            입력 텍스트와 해쉬된 텍스트가 같은지 여부를 비교한다.
            </summary>
            <param name="inputText">해쉬되지 않은 입력 텍스트</param>
            <param name="hashText">해쉬된 텍스트</param>
            <returns>비교 결과</returns>
        </member>
        <member name="M:Neoplus.Framework.Common.Hashing.isHashEqual(System.String,System.String,Neoplus.Framework.Common.Hashing.HashingTypes)">
            <summary>
            사용자가 지정한 해쉬 알고리즘으로 입력 텍스트와 해쉬된 텍스트가 같은지 여부를 비교한다.
            </summary>
            <param name="inputText">해쉬되지 않은 입력 텍스트</param>
            <param name="hashText">해쉬된 텍스트</param>
            <param name="hashingType">사용자가 지정한 해슁 타입</param>
            <returns>비교 결과</returns>
        </member>
        <member name="M:Neoplus.Framework.Common.Hashing.ComputeHash(System.String,Neoplus.Framework.Common.Hashing.HashingTypes)">
            <summary>
            해쉬 코드를 계산해서 스트링으로 변환함
            </summary>
            <param name="inputText">해쉬코드로 변환할 스트링</param>
            <param name="hashingType">사용할 해슁 타입</param>
            <returns>hashed string</returns>
        </member>
        <member name="M:Neoplus.Framework.Common.Hashing.getHashAlgorithm(Neoplus.Framework.Common.Hashing.HashingTypes)">
            <summary>
            특정한 해슁 알고리즘을 리턴함
            </summary>
            <param name="hashingType">사용할 해슁 알고리즘</param>
            <returns>HashAlgorithm</returns>
        </member>
        <member name="T:Neoplus.Framework.Common.Hashing.HashingTypes">
            <summary>
            가능한 해슁 멤버
            </summary>
        </member>
        <member name="T:Neoplus.Framework.Common.DateTimeManager">
            <summary>
            날짜관련 함수 모음
            - 작  성  자 : 김윤식(totoropia@gmail.com) Neoplus<para></para>
            - 최초작성일 : 2009년 04월 16일<para></para>
            - 최초수정자 : <para></para>
            - 최초수정일 : <para></para>
            - 주요변경로그 <para></para>
            </summary>
        </member>
        <member name="M:Neoplus.Framework.Common.DateTimeManager.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Neoplus.Framework.Common.DateTimeManager.CalDateTime(Neoplus.Framework.Common.DateTimeManager.DateType)">
            <summary>
            날짜 가져오기<para></para>
            * 현재 달의 첫날짜와 끝날짜를 리턴하여 줍니다.
            - 작  성  자 : 김윤식(totoropia@gmail.com) Neoplus<para></para>
            - 최초작성일 : 2010년 03월 12일<para></para>
            - 최초수정자 : <para></para>
            - 최초수정일 : <para></para>
            </summary>
            <param name="dateType">StartDT:첫날자, EndDT:끝날자</param>
            <returns></returns>
        </member>
        <member name="M:Neoplus.Framework.Common.DateTimeManager.ConvertStrDate(System.String)">
            <summary>
            yyyyMMdd형식의 문자열을 yyyy-MM-dd형식의 문자열로 변환하여 반환한다.<para></para>
            또는 <para></para>
            hhmm형식의 문자열을 hh:mm형식의 문자열로 변환하여 반환한다.<para></para>
            ex) 20100312 => 2010-03-12<para></para>
                1230 => 12:30<para></para>
            - 작  성  자 : 김윤식(totoropia@gmail.com) Neoplus<para></para>
            - 최초작성일 : 2010년 03월 12일<para></para>
            - 최초수정자 : <para></para>
            - 최초수정일 : <para></para>
            </summary>
            <param name="strDate">yyyyMMdd 또는 hhmm문자열 </param>
            <returns>yyyy-MM-dd문자열 ex) 2010-03-12 </returns>
        </member>
        <member name="M:Neoplus.Framework.Common.DateTimeManager.ToSafeDateTime(System.String)">
            <summary>
            yyyy-MM-dd형식의 문자열을 넣으면 DateTime 형식으로 반환다.
            - 작  성  자 : 김윤식(totoropia@gmail.com) Neoplus<para></para>
            - 최초작성일 : 2010년 03월 12일<para></para>
            - 최초수정자 : <para></para>
            - 최초수정일 : <para></para>
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Neoplus.Framework.Common.DateTimeManager.WeekIndex(System.DayOfWeek)">
            <summary>
            요일의 위치를 반환합니다.<para></para>
            - 작  성  자 : 김윤식(totoropia@gmail.com) Neoplus<para></para>
            - 최초작성일 : 2010년 03월 12일<para></para>
            - 최초수정자 : <para></para>
            - 최초수정일 : <para></para>
            </summary>
            <param name="week">해당 일의 요일</param>
            <returns>int</returns>
        </member>
        <member name="M:Neoplus.Framework.Common.DateTimeManager.GetNowDateString(System.String)">
            <summary>
            현재날짜를 입력한 구분자로 구분하여 문자열로 리턴한다.
            strDelimeter: 년도 구분자
            ex) GetNowDateString("-") => 2010-03-12
                GetNowDateString("/") => 2010/03/12
                GetNowDateString(".") => 2010.03.12
            - 작  성  자 : 김윤식(totoropia@gmail.com) Neoplus<para></para>
            - 최초작성일 : 2010년 03월 12일<para></para>
            - 최초수정자 : <para></para>
            - 최초수정일 : <para></para>
            </summary>
            <param name="strDelimeter">구분자</param>
            <returns></returns>
        </member>
        <member name="M:Neoplus.Framework.Common.DateTimeManager.GetFormattedDate(System.String,System.String)">
            <summary>
            변환된 날짜를 리턴한다.<para></para>
            strValue:입력날짜  strDelimeter: 년도 구분자<para></para>
            ex) GetFormattedDate("20100312", "-") => "2010-03-12"
                GetFormattedDate("20100312", "/") => "2010/03/12"
                GetFormattedDate("20100312", ".") => "2010.03.12"
            - 작  성  자 : 김윤식(totoropia@gmail.com) Neoplus<para></para>
            - 최초작성일 : 2010년 03월 12일<para></para>
            - 최초수정자 : <para></para>
            - 최초수정일 : <para></para>
            </summary>
            <param name="strValue">yyyyMMdd 문자열</param>
            <param name="strDelimeter">구분자</param>
            <returns></returns>
        </member>
        <member name="M:Neoplus.Framework.Common.DateTimeManager.FillYear(System.Web.UI.WebControls.ListControl,System.Int32,System.Int32,System.Int32)">
            <summary>
            List컨트롤에 현재년도를 기준으로 범위내의 연도를 바인딩하여 준다.<para></para>
            ex) FillYear(ddlYear, 3, 3, 2009)
            - 작  성  자 : 김윤식(totoropia@gmail.com) Neoplus<para></para>
            - 최초작성일 : 2010년 03월 12일<para></para>
            - 최초수정자 : <para></para>
            - 최초수정일 : <para></para>
            </summary>
            <param name="control">DropDownList, ListBox, CheckBoxList, RadioButtonList</param>
            <param name="minYear">이전년도</param>
            <param name="maxYear">이후년도</param>
            <param name="selectedValue">기본설정년도</param>
        </member>
        <member name="M:Neoplus.Framework.Common.DateTimeManager.FillYear(System.Web.UI.WebControls.ListControl,System.Int32,System.Int32)">
            <summary>
            List컨트롤에 현재년도를 기준으로 범위내의 연도를 바인딩하여 준다.<para></para>
            올해가 기본으로 선택된다.<para></para>
            ex) FillYear(ddlYear, 3, 3)
            - 작  성  자 : 김윤식(totoropia@gmail.com) Neoplus<para></para>
            - 최초작성일 : 2010년 03월 12일<para></para>
            - 최초수정자 : <para></para>
            - 최초수정일 : <para></para>
            </summary>
            <param name="control">DropDownList, ListBox, CheckBoxList, RadioButtonList</param>
            <param name="minYear">이전녀도</param>
            <param name="maxYear">이후년도</param>
        </member>
        <member name="M:Neoplus.Framework.Common.DateTimeManager.FillYear(System.Web.UI.WebControls.ListControl,System.Int32,System.Int32,System.String)">
            <summary>
            List컨트롤에 입력한 범위를 기준으로 년도를 바인딩하여 준다.<para></para>
            ex) FillYear(ddlYear, 2001, 2010)
            - 작  성  자 : 김윤식(totoropia@gmail.com) Neoplus<para></para>
            - 최초작성일 : 2010년 03월 12일<para></para>
            - 최초수정자 : <para></para>
            - 최초수정일 : <para></para>
            </summary>
            <param name="control">DropDownList, ListBox, CheckBoxList, RadioButtonList</param>
            <param name="StartYear">시작년도</param>
            <param name="EndYear">끝년도</param>
            <param name="SelectedValue">기본지정년도</param>
        </member>
        <member name="M:Neoplus.Framework.Common.DateTimeManager.FillYear(System.Web.UI.WebControls.ListControl,System.Int32)">
            <summary>
            List컨트롤에 현재년도를 기준으로 아래로10년 위로10년의 연도를 바인딩하여 준다.<para></para>
            ex) FillYear(ddlYear, 2008)
            - 작  성  자 : 김윤식(totoropia@gmail.com) Neoplus<para></para>
            - 최초작성일 : 2010년 03월 12일<para></para>
            - 최초수정자 : <para></para>
            - 최초수정일 : <para></para>
            </summary>
            <param name="control">DropDownList, ListBox, CheckBoxList, RadioButtonList</param>
            <param name="selectedValue">기본지정년도</param>
        </member>
        <member name="M:Neoplus.Framework.Common.DateTimeManager.FillYear(System.Web.UI.WebControls.ListControl)">
            <summary>
            List컨트롤에 현재년도를 기준으로 아래로10년 위로10년의 연도를 바인딩하여 준다.<para></para>
            올해가 기본으로 선택된다.
            ex) FillYear(ddlYear)
            - 작  성  자 : 김윤식(totoropia@gmail.com) Neoplus<para></para>
            - 최초작성일 : 2010년 03월 12일<para></para>
            - 최초수정자 : <para></para>
            - 최초수정일 : <para></para>
            </summary>
            <param name="control">DropDownList, ListBox, CheckBoxList, RadioButtonList</param>
        </member>
        <member name="M:Neoplus.Framework.Common.DateTimeManager.FillMonth(System.Web.UI.WebControls.ListControl,System.Int32)">
            <summary>
            List컨트롤에 월을 바인딩 하여준다.<para></para>
            ex) FillMonth(ddlMonth, 3)
            - 작  성  자 : 김윤식(totoropia@gmail.com) Neoplus<para></para>
            - 최초작성일 : 2010년 03월 12일<para></para>
            - 최초수정자 : <para></para>
            - 최초수정일 : <para></para>
            </summary>
            <param name="control">DropDownList, ListBox, CheckBoxList, RadioButtonList</param>
            <param name="selectedValue">기본지정년도</param>
        </member>
        <member name="M:Neoplus.Framework.Common.DateTimeManager.FillMonth(System.Web.UI.WebControls.ListControl)">
            <summary>
            List컨트롤에 월을 바인딩 하여준다.<para></para>
            현재월을 기본으로 선택한다. <para></para>
            ex) FillMonth(ddlMonth)
            - 작  성  자 : 김윤식(totoropia@gmail.com) Neoplus<para></para>
            - 최초작성일 : 2010년 03월 12일<para></para>
            - 최초수정자 : <para></para>
            - 최초수정일 : <para></para>
            </summary>
            <param name="control">DropDownList, ListBox, CheckBoxList, RadioButtonList</param>
        </member>
        <member name="M:Neoplus.Framework.Common.DateTimeManager.FillDate(System.Web.UI.WebControls.ListControl,System.Int32)">
            <summary>
            List컨트롤에 무조건 1~31 까지 바인딩 하여준다.<para></para>
            - 작  성  자 : 김윤식(totoropia@gmail.com) Neoplus<para></para>
            - 최초작성일 : 2010년 03월 12일<para></para>
            - 최초수정자 : <para></para>
            - 최초수정일 : <para></para>
            </summary>
            <param name="control">DropDownList, ListBox, CheckBoxList, RadioButtonList</param>
            <param name="selectedValue">기본지정일</param>
        </member>
        <member name="M:Neoplus.Framework.Common.DateTimeManager.FillDate(System.Web.UI.WebControls.ListControl,System.String,System.Int32)">
            <summary>
            List컨트롤에 해당월의 1일~마지막일 까지를 바인딩한다.<para></para>
            ex) FillDate(ddlDay,  "2010-02-17", 17); 
            - 작  성  자 : 김윤식(totoropia@gmail.com) Neoplus<para></para>
            - 최초작성일 : 2010년 03월 12일<para></para>
            - 최초수정자 : <para></para>
            - 최초수정일 : <para></para>
            </summary>
            <param name="control">DropDownList, ListBox, CheckBoxList, RadioButtonList</param>
            <param name="currentDate">바인딩할 기준월이 들어 있는 날짜 문자열 yyyy-MM-dd형식</param>
            <param name="selectedValue"></param>
        </member>
        <!-- 잘못된 형식의 XML 주석은 "M:Neoplus.Framework.Common.DateTimeManager.FillDate(System.Web.UI.WebControls.ListControl,System.Int32,System.Int32)" 멤버에 대해 무시됩니다. -->
        <member name="M:Neoplus.Framework.Common.DateTimeManager.FillHour(System.Web.UI.WebControls.ListControl,System.Int32)">
            <summary>
            List컨트롤에 0~23까지 시간을 바인딩 하여준다.<para></para>
            기본지정 시간을 선택할 수 있다.
            - 작  성  자 : 김윤식(totoropia@gmail.com) Neoplus<para></para>
            - 최초작성일 : 2010년 03월 12일<para></para>
            - 최초수정자 : <para></para>
            - 최초수정일 : <para></para>
            </summary>
            <param name="control"></param>
            <param name="selectedValue"></param>
        </member>
        <member name="T:Neoplus.Framework.Common.DateTimeManager.DateType">
            <summary>
            
            </summary>
        </member>
        <member name="M:Neoplus.Framework.Common.FileManager.CheckFileName(System.String)">
            <summary>
            파일명을 체크합니다. 특수문가가 들어간 파일은 제외시킵니다.
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Neoplus.Framework.Common.FileManager.GetFileExtension(System.String)">
            <summary>
            파일명 문자열에서 확장자를 번환합니다.
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Neoplus.Framework.Common.FileManager.GetFileList(System.String)">
            <summary>
            해당 폴더의 하위 디렉토리까지 검사해서 파일명을 가져온다.<para></para>
            dirKey에는 Web.Config에 등록된 디렉토리 키를 입력합니다.<para></para>
            <![CDATA[dirKey는 <add key="FileData:Default" value="D:\FileData" />와같이 구성합니다.]]><para></para>
            ex) string[] strArrFileList = GetFileList("FileData:Default");<para></para>
            </summary>
            <param name="dirKey"></param>
            <returns></returns>
        </member>
        <member name="M:Neoplus.Framework.Common.FileManager.GetSubDirFileList(System.String)">
            <summary>
            해당 폴더의 하위 디렉토리까지 검사해서 파일명을 가져온다.<para></para>
            파일 리스트를 가져올 폴더의 Full경로를 지정한다.<para></para>
            ex) string[] strArrFileList = GetSubDirFileList("D:\사진\");<para></para>
            </summary>
            <param name="dirPath"></param>
            <returns></returns>
        </member>
        <member name="M:Neoplus.Framework.Common.FileManager.ReNameFile(System.String,System.String,System.Boolean)">
            <summary>
            파일의 이름을 변경합니다.
            </summary>
            <param name="oldFileName">기존 파일명</param>
            <param name="newFileName">변경할 파일명</param>
            <param name="existsCheck">파일이 존재 하지 않을때 true이면 오류 반환, false이면 무시</param>
        </member>
        <member name="M:Neoplus.Framework.Common.FileManager.DeleteFile(System.String,System.Boolean)">
            <summary>
            파일을 삭제합니다.
            </summary>
            <param name="pathfile">경로+파일명</param>
            <param name="existsCheck">파일이 존재 하지 않을때 true이면 오류 반환, false이면 무시</param>
        </member>
        <member name="M:Neoplus.Framework.Common.FileManager.DeleteFile(System.String)">
            <summary>
            파일을 삭제합니다.
            </summary>
            <param name="pathfile">경로+파일명</param>
        </member>
        <member name="M:Neoplus.Framework.Common.FileManager.DeleteFile(System.String,System.String)">
            <summary>
            파일을 삭제합니다.
            </summary>
            <param name="dirKey">Web.Config 디렉토리키</param>
            <param name="file">파일명</param>
        </member>
        <member name="M:Neoplus.Framework.Common.FileManager.DeleteFiles(System.String,System.String[])">
            <summary>
            여러파일을 한꺼번에 삭제합니다.
            </summary>
            <param name="dirKey">Web.Config 디렉토리 키</param>
            <param name="files">파일배열</param>
        </member>
        <member name="M:Neoplus.Framework.Common.FileManager.ExitsDirectory(System.String)">
            <summary>
            해당디렉토리가 존재하는지 확인<para></para>
            디렉토리가 존재하면 true, 존재하지 않으면 false 반환
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Neoplus.Framework.Common.FileManager.ExitsDirectory(System.String,System.String)">
            <summary>
            해당디렉토리가 존재하는지 확인 <para></para>
            디렉토리가 존재하면 true, 존재하지 않으면 false 반환
            </summary>
            <param name="dirKey">Web.Config에 정의된 디렉토리키</param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Neoplus.Framework.Common.FileManager.MakeDirectory(System.String)">
            <summary>
            해당 디렉토리를 생성합니다.
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Neoplus.Framework.Common.FileManager.MakeDirectory(System.String,System.String)">
            <summary>
            해당 디렉토리를 생성합니다.
            </summary>
            <param name="dirKey">Web.Config에 정의된 디렉토리키</param>
            <param name="path"></param>
        </member>
        <member name="M:Neoplus.Framework.Common.FileManager.DeleteDirectory(System.String)">
            <summary>
            해당 디렉토리와 하위 파일을 모두 삭제합니다.
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Neoplus.Framework.Common.FileManager.DeleteDirectory(System.String,System.String)">
            <summary>
            해당 디렉토리와 하위 파일을 모두 삭제합니다.
            </summary>
            <param name="dirKey"></param>
            <param name="path"></param>
        </member>
        <member name="M:Neoplus.Framework.Common.FileManager.UploadFile(System.String,System.Web.UI.WebControls.FileUpload)">
            <summary>
            파일을 업로드 합니다.<para></para>
            문자열 배열로 결과를 반환합니다.<para></para>
            서버에 동일 파일이 있으면 덮어쓰지 않고 파일이름+"_n"으로 이름을 변경하여 저장합니다. <para></para>
            [0] 원본파일명<para></para>
            [1] 저장한파일명<para></para>
            [2] 파일사이즈<para></para>
            <para></para>
            </summary>
            <param name="dirKey">Web.Config에 정의된 디렉토리키</param>
            <param name="fileUpload">파일업로드 객체</param>
            <returns>
            문자열 배열로 결과를 반환합니다.<para></para>
            [0] 원본파일명<para></para>
            [1] 저장한파일명<para></para>
            [2] 파일사이즈<para></para>
            </returns>
        </member>
        <member name="M:Neoplus.Framework.Common.FileManager.UploadFile(System.String,System.Web.UI.WebControls.FileUpload,System.Boolean)">
            <summary>
            파일을 업로드 합니다.<para></para>
            문자열 배열로 결과를 반환합니다.<para></para>
            [0] 원본파일명<para></para>
            [1] 저장한파일명<para></para>
            [2] 파일사이즈<para></para>
            </summary>
            <param name="dirKey">Web.Config에 정의된 디렉토리키</param>
            <param name="newFileName">저장할 파일명</param>
            <param name="fileUpload">파일업로드 객체</param>
            <param name="overWirte">기존파일존재시 덮어쓸지 여부를 지정합니다.</param>
            <returns></returns>
        </member>
        <member name="M:Neoplus.Framework.Common.FileManager.UploadFile(System.String,System.String,System.Web.UI.WebControls.FileUpload)">
            <summary>
            파일을 업로드 합니다.<para></para>
            문자열 배열로 결과를 반환합니다.<para></para>
            서버에 동일 파일이 있으면 덮어쓰지 않고 파일이름+"_n"으로 이름을 변경하여 저장합니다. <para></para>
            [0] 원본파일명<para></para>
            [1] 저장한파일명<para></para>
            [2] 파일사이즈<para></para>
            </summary>
            <param name="dirKey">Web.Config에 정의된 디렉토리키</param>
            <param name="newFileName">저장할 파일명</param>
            <param name="fileUpload">파일업로드 객체</param>
            <returns>
            문자열 배열로 결과를 반환합니다.<para></para>
            [0] 원본파일명<para></para>
            [1] 저장한파일명<para></para>
            [2] 파일사이즈<para></para>
            </returns>
        </member>
        <member name="M:Neoplus.Framework.Common.FileManager.UploadFile(System.String,System.String,System.Web.UI.WebControls.FileUpload,System.Boolean)">
            <summary>
            파일을 업로드 합니다.<para></para>
            문자열 배열로 결과를 반환합니다.<para></para>
            [0] 원본파일명<para></para>
            [1] 저장한파일명<para></para>
            [2] 파일사이즈<para></para>
            </summary>
            <param name="dirKey">Web.Config에 정의된 디렉토리키</param>
            <param name="newFileName">저장할 파일명</param>
            <param name="fileUpload">파일업로드 객체</param>
            <param name="overWirte">동일파일이 있을때 덮어쓸지 여부를 지정합니다.</param>
            <returns>
            문자열 배열로 결과를 반환합니다.<para></para>
            [0] 원본파일명<para></para>
            [1] 저장한파일명<para></para>
            [2] 파일사이즈<para></para>
            </returns>
        </member>
        <member name="M:Neoplus.Framework.Common.FileManager.UploadFile2(System.String,System.Web.HttpPostedFile)">
            <summary>
            파일을 업로드 합니다.<para></para>
            문자열 배열로 결과를 반환합니다.<para></para>
            서버에 동일 파일이 있으면 덮어쓰지 않고 파일이름+"_n"으로 이름을 변경하여 저장합니다. <para></para>
            [0] 원본파일명<para></para>
            [1] 저장한파일명<para></para>
            [2] 파일사이즈<para></para>
            <para></para>
            </summary>
            <param name="dirKey">Web.Config에 정의된 디렉토리키</param>
            <param name="fileUpload">파일업로드 객체</param>
            <returns>
            문자열 배열로 결과를 반환합니다.<para></para>
            [0] 원본파일명<para></para>
            [1] 저장한파일명<para></para>
            [2] 파일사이즈<para></para>
            </returns>
        </member>
        <member name="M:Neoplus.Framework.Common.FileManager.UploadFile2(System.String,System.String,System.Web.HttpPostedFile,System.Boolean)">
            <summary>
            파일을 업로드 합니다.<para></para>
            문자열 배열로 결과를 반환합니다.<para></para>
            [0] 원본파일명<para></para>
            [1] 저장한파일명<para></para>
            [2] 파일사이즈<para></para>
            </summary>
            <param name="dirKey">Web.Config에 정의된 디렉토리키</param>
            <param name="newFileName">저장할 파일명</param>
            <param name="fileUpload">파일업로드 객체</param>
            <param name="overWirte">동일파일이 있을때 덮어쓸지 여부를 지정합니다.</param>
            <returns>
            문자열 배열로 결과를 반환합니다.<para></para>
            [0] 원본파일명<para></para>
            [1] 저장한파일명<para></para>
            [2] 파일사이즈<para></para>
            </returns>
        </member>
        <member name="M:Neoplus.Framework.Common.FileManager.WriteHtmlFile(System.String,System.String)">
            <summary>
            파일서버에 HTML문자열을 파일로 생성하여 저장합니다.<para></para>
            fileName에는 경로를 포함한 FULL네임을 지정해야 합니다.<para></para>
            
            </summary>
            <param name="htmlContents">저장할 HTML 문자열</param>
            <param name="fileName">성적서 파일명(경로포함) ex) \\192.168.200.248\FileData\LIMSPlus\TestReport\11\1차_성적서.htm</param>
        </member>
        <member name="M:Neoplus.Framework.Common.FileManager.DownLoadFile(System.String,System.String,System.Web.UI.Page)">
            <summary>
            파일을 다운로드 합니다.<para></para>
            </summary>
            <param name="dirKey">Web.Config에 있는 DirKey</param>
            <param name="fileName">파일명</param>
            <param name="pg"></param>
        </member>
        <member name="M:Neoplus.Framework.Common.FileManager.DownLoadFile(System.String,System.String,System.String,System.Web.UI.Page)">
            <summary>
            파일을 다운로드 합니다.<para></para>
            </summary>
            <param name="dirKey">Web.Config에 있는 DirKey</param>
            <param name="fileName">파일명</param>
            <param name="panel">UpdatePanel 컨트롤ID</param>
            <param name="pg"></param>
        </member>
        <member name="M:Neoplus.Framework.Common.FileManager.GetDownLoadFileString(System.String,System.String)">
            <summary>
            파일을 다운로드용 암호화된 문자열을 만들어줍니다.<para></para>
            String 배열로 반환합니다. 0:암호화문자열, 1:파일크기
            </summary>
            <param name="dirKey">Web.Config에 있는 DirKey</param>
            <param name="fileName">파일명</param>
        </member>
        <member name="M:Neoplus.Framework.Common.FileManager.GetDownLoadFileStringOnly(System.String,System.String)">
            <summary>
            파일을 다운로드용 암호화된 문자열을 만들어줍니다.<para></para>
            String 배열로 반환합니다. 0:암호화문자열, 1:파일크기
            </summary>
            <param name="dirKey">Web.Config에 있는 DirKey</param>
            <param name="fileName">파일명</param>
        </member>
    </members>
</doc>
