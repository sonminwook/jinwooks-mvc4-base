//------------------------------------------------------------------------------
// <auto-generated>
//    이 코드는 템플릿에서 생성되었습니다.
//
//    이 파일을 수동으로 변경하면 응용 프로그램에 예기치 않은 동작이 발생할 수 있습니다.
//    코드가 다시 생성되면 이 파일에 대한 수동 변경 사항을 덮어씁니다.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace MVC4Base
{
    #region 컨텍스트
    
    /// <summary>
    /// 사용 가능한 메타데이터 설명서가 없습니다.
    /// </summary>
    public partial class MVC4BaseEntities : ObjectContext
    {
        #region 생성자
    
        /// <summary>
        /// 응용 프로그램 구성 파일의 'MVC4BaseEntities' 섹션에서 검색된 연결 문자열을 사용하여 새 MVC4BaseEntities 개체를 초기화합니다.
        /// </summary>
        public MVC4BaseEntities() : base("name=MVC4BaseEntities", "MVC4BaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 새 MVC4BaseEntities 개체를 초기화합니다.
        /// </summary>
        public MVC4BaseEntities(string connectionString) : base(connectionString, "MVC4BaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 새 MVC4BaseEntities 개체를 초기화합니다.
        /// </summary>
        public MVC4BaseEntities(EntityConnection connection) : base(connection, "MVC4BaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 부분 메서드(Partial Method)
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 속성
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        public ObjectSet<tbMember> tbMember
        {
            get
            {
                if ((_tbMember == null))
                {
                    _tbMember = base.CreateObjectSet<tbMember>("tbMember");
                }
                return _tbMember;
            }
        }
        private ObjectSet<tbMember> _tbMember;
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        public ObjectSet<tbMemberLoginLog> tbMemberLoginLog
        {
            get
            {
                if ((_tbMemberLoginLog == null))
                {
                    _tbMemberLoginLog = base.CreateObjectSet<tbMemberLoginLog>("tbMemberLoginLog");
                }
                return _tbMemberLoginLog;
            }
        }
        private ObjectSet<tbMemberLoginLog> _tbMemberLoginLog;
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        public ObjectSet<tbMemberLoginSession> tbMemberLoginSession
        {
            get
            {
                if ((_tbMemberLoginSession == null))
                {
                    _tbMemberLoginSession = base.CreateObjectSet<tbMemberLoginSession>("tbMemberLoginSession");
                }
                return _tbMemberLoginSession;
            }
        }
        private ObjectSet<tbMemberLoginSession> _tbMemberLoginSession;
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        public ObjectSet<tbSYSAuthority> tbSYSAuthority
        {
            get
            {
                if ((_tbSYSAuthority == null))
                {
                    _tbSYSAuthority = base.CreateObjectSet<tbSYSAuthority>("tbSYSAuthority");
                }
                return _tbSYSAuthority;
            }
        }
        private ObjectSet<tbSYSAuthority> _tbSYSAuthority;
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        public ObjectSet<tbSYSCode> tbSYSCode
        {
            get
            {
                if ((_tbSYSCode == null))
                {
                    _tbSYSCode = base.CreateObjectSet<tbSYSCode>("tbSYSCode");
                }
                return _tbSYSCode;
            }
        }
        private ObjectSet<tbSYSCode> _tbSYSCode;
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        public ObjectSet<tbSYSMenu> tbSYSMenu
        {
            get
            {
                if ((_tbSYSMenu == null))
                {
                    _tbSYSMenu = base.CreateObjectSet<tbSYSMenu>("tbSYSMenu");
                }
                return _tbSYSMenu;
            }
        }
        private ObjectSet<tbSYSMenu> _tbSYSMenu;
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        public ObjectSet<tbSYSMenuRole> tbSYSMenuRole
        {
            get
            {
                if ((_tbSYSMenuRole == null))
                {
                    _tbSYSMenuRole = base.CreateObjectSet<tbSYSMenuRole>("tbSYSMenuRole");
                }
                return _tbSYSMenuRole;
            }
        }
        private ObjectSet<tbSYSMenuRole> _tbSYSMenuRole;
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        public ObjectSet<tbSYSRoleAuthority> tbSYSRoleAuthority
        {
            get
            {
                if ((_tbSYSRoleAuthority == null))
                {
                    _tbSYSRoleAuthority = base.CreateObjectSet<tbSYSRoleAuthority>("tbSYSRoleAuthority");
                }
                return _tbSYSRoleAuthority;
            }
        }
        private ObjectSet<tbSYSRoleAuthority> _tbSYSRoleAuthority;
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        public ObjectSet<tbSYSRoleGroup> tbSYSRoleGroup
        {
            get
            {
                if ((_tbSYSRoleGroup == null))
                {
                    _tbSYSRoleGroup = base.CreateObjectSet<tbSYSRoleGroup>("tbSYSRoleGroup");
                }
                return _tbSYSRoleGroup;
            }
        }
        private ObjectSet<tbSYSRoleGroup> _tbSYSRoleGroup;
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        public ObjectSet<tbSYSRoleMember> tbSYSRoleMember
        {
            get
            {
                if ((_tbSYSRoleMember == null))
                {
                    _tbSYSRoleMember = base.CreateObjectSet<tbSYSRoleMember>("tbSYSRoleMember");
                }
                return _tbSYSRoleMember;
            }
        }
        private ObjectSet<tbSYSRoleMember> _tbSYSRoleMember;
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        public ObjectSet<tbVisitLog> tbVisitLog
        {
            get
            {
                if ((_tbVisitLog == null))
                {
                    _tbVisitLog = base.CreateObjectSet<tbVisitLog>("tbVisitLog");
                }
                return _tbVisitLog;
            }
        }
        private ObjectSet<tbVisitLog> _tbVisitLog;

        #endregion

        #region AddTo 메서드
    
        /// <summary>
        /// tbMember EntitySet에 새 개체를 추가하는 데 사용되지 않는 메서드입니다. 연결된 ObjectSet&lt;T&gt; 속성의 .Add 메서드를 대신 사용하십시오.
        /// </summary>
        public void AddTotbMember(tbMember tbMember)
        {
            base.AddObject("tbMember", tbMember);
        }
    
        /// <summary>
        /// tbMemberLoginLog EntitySet에 새 개체를 추가하는 데 사용되지 않는 메서드입니다. 연결된 ObjectSet&lt;T&gt; 속성의 .Add 메서드를 대신 사용하십시오.
        /// </summary>
        public void AddTotbMemberLoginLog(tbMemberLoginLog tbMemberLoginLog)
        {
            base.AddObject("tbMemberLoginLog", tbMemberLoginLog);
        }
    
        /// <summary>
        /// tbMemberLoginSession EntitySet에 새 개체를 추가하는 데 사용되지 않는 메서드입니다. 연결된 ObjectSet&lt;T&gt; 속성의 .Add 메서드를 대신 사용하십시오.
        /// </summary>
        public void AddTotbMemberLoginSession(tbMemberLoginSession tbMemberLoginSession)
        {
            base.AddObject("tbMemberLoginSession", tbMemberLoginSession);
        }
    
        /// <summary>
        /// tbSYSAuthority EntitySet에 새 개체를 추가하는 데 사용되지 않는 메서드입니다. 연결된 ObjectSet&lt;T&gt; 속성의 .Add 메서드를 대신 사용하십시오.
        /// </summary>
        public void AddTotbSYSAuthority(tbSYSAuthority tbSYSAuthority)
        {
            base.AddObject("tbSYSAuthority", tbSYSAuthority);
        }
    
        /// <summary>
        /// tbSYSCode EntitySet에 새 개체를 추가하는 데 사용되지 않는 메서드입니다. 연결된 ObjectSet&lt;T&gt; 속성의 .Add 메서드를 대신 사용하십시오.
        /// </summary>
        public void AddTotbSYSCode(tbSYSCode tbSYSCode)
        {
            base.AddObject("tbSYSCode", tbSYSCode);
        }
    
        /// <summary>
        /// tbSYSMenu EntitySet에 새 개체를 추가하는 데 사용되지 않는 메서드입니다. 연결된 ObjectSet&lt;T&gt; 속성의 .Add 메서드를 대신 사용하십시오.
        /// </summary>
        public void AddTotbSYSMenu(tbSYSMenu tbSYSMenu)
        {
            base.AddObject("tbSYSMenu", tbSYSMenu);
        }
    
        /// <summary>
        /// tbSYSMenuRole EntitySet에 새 개체를 추가하는 데 사용되지 않는 메서드입니다. 연결된 ObjectSet&lt;T&gt; 속성의 .Add 메서드를 대신 사용하십시오.
        /// </summary>
        public void AddTotbSYSMenuRole(tbSYSMenuRole tbSYSMenuRole)
        {
            base.AddObject("tbSYSMenuRole", tbSYSMenuRole);
        }
    
        /// <summary>
        /// tbSYSRoleAuthority EntitySet에 새 개체를 추가하는 데 사용되지 않는 메서드입니다. 연결된 ObjectSet&lt;T&gt; 속성의 .Add 메서드를 대신 사용하십시오.
        /// </summary>
        public void AddTotbSYSRoleAuthority(tbSYSRoleAuthority tbSYSRoleAuthority)
        {
            base.AddObject("tbSYSRoleAuthority", tbSYSRoleAuthority);
        }
    
        /// <summary>
        /// tbSYSRoleGroup EntitySet에 새 개체를 추가하는 데 사용되지 않는 메서드입니다. 연결된 ObjectSet&lt;T&gt; 속성의 .Add 메서드를 대신 사용하십시오.
        /// </summary>
        public void AddTotbSYSRoleGroup(tbSYSRoleGroup tbSYSRoleGroup)
        {
            base.AddObject("tbSYSRoleGroup", tbSYSRoleGroup);
        }
    
        /// <summary>
        /// tbSYSRoleMember EntitySet에 새 개체를 추가하는 데 사용되지 않는 메서드입니다. 연결된 ObjectSet&lt;T&gt; 속성의 .Add 메서드를 대신 사용하십시오.
        /// </summary>
        public void AddTotbSYSRoleMember(tbSYSRoleMember tbSYSRoleMember)
        {
            base.AddObject("tbSYSRoleMember", tbSYSRoleMember);
        }
    
        /// <summary>
        /// tbVisitLog EntitySet에 새 개체를 추가하는 데 사용되지 않는 메서드입니다. 연결된 ObjectSet&lt;T&gt; 속성의 .Add 메서드를 대신 사용하십시오.
        /// </summary>
        public void AddTotbVisitLog(tbVisitLog tbVisitLog)
        {
            base.AddObject("tbVisitLog", tbVisitLog);
        }

        #endregion

        #region 함수 가져오기
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        /// <param name="mainCode">사용 가능한 메타데이터 설명서가 없습니다.</param>
        /// <param name="subCode">사용 가능한 메타데이터 설명서가 없습니다.</param>
        /// <param name="codeName">사용 가능한 메타데이터 설명서가 없습니다.</param>
        /// <param name="titleYN">사용 가능한 메타데이터 설명서가 없습니다.</param>
        /// <param name="pageIndex">사용 가능한 메타데이터 설명서가 없습니다.</param>
        /// <param name="pageSize">사용 가능한 메타데이터 설명서가 없습니다.</param>
        /// <param name="order">사용 가능한 메타데이터 설명서가 없습니다.</param>
        /// <param name="totalCount">사용 가능한 메타데이터 설명서가 없습니다.</param>
        public ObjectResult<fnSYSCodeList_Result> fnSYSCodeList(global::System.String mainCode, global::System.String subCode, global::System.String codeName, global::System.String titleYN, Nullable<global::System.Decimal> pageIndex, Nullable<global::System.Decimal> pageSize, global::System.String order, ObjectParameter totalCount)
        {
            ObjectParameter mainCodeParameter;
            if (mainCode != null)
            {
                mainCodeParameter = new ObjectParameter("MainCode", mainCode);
            }
            else
            {
                mainCodeParameter = new ObjectParameter("MainCode", typeof(global::System.String));
            }
    
            ObjectParameter subCodeParameter;
            if (subCode != null)
            {
                subCodeParameter = new ObjectParameter("SubCode", subCode);
            }
            else
            {
                subCodeParameter = new ObjectParameter("SubCode", typeof(global::System.String));
            }
    
            ObjectParameter codeNameParameter;
            if (codeName != null)
            {
                codeNameParameter = new ObjectParameter("CodeName", codeName);
            }
            else
            {
                codeNameParameter = new ObjectParameter("CodeName", typeof(global::System.String));
            }
    
            ObjectParameter titleYNParameter;
            if (titleYN != null)
            {
                titleYNParameter = new ObjectParameter("TitleYN", titleYN);
            }
            else
            {
                titleYNParameter = new ObjectParameter("TitleYN", typeof(global::System.String));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Decimal));
            }
    
            ObjectParameter pageSizeParameter;
            if (pageSize.HasValue)
            {
                pageSizeParameter = new ObjectParameter("PageSize", pageSize);
            }
            else
            {
                pageSizeParameter = new ObjectParameter("PageSize", typeof(global::System.Decimal));
            }
    
            ObjectParameter orderParameter;
            if (order != null)
            {
                orderParameter = new ObjectParameter("Order", order);
            }
            else
            {
                orderParameter = new ObjectParameter("Order", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<fnSYSCodeList_Result>("fnSYSCodeList", mainCodeParameter, subCodeParameter, codeNameParameter, titleYNParameter, pageIndexParameter, pageSizeParameter, orderParameter, totalCount);
        }
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        /// <param name="userID">사용 가능한 메타데이터 설명서가 없습니다.</param>
        /// <param name="userPassword">사용 가능한 메타데이터 설명서가 없습니다.</param>
        /// <param name="userIP">사용 가능한 메타데이터 설명서가 없습니다.</param>
        /// <param name="browserUserAgent">사용 가능한 메타데이터 설명서가 없습니다.</param>
        /// <param name="browserID">사용 가능한 메타데이터 설명서가 없습니다.</param>
        /// <param name="browserVer">사용 가능한 메타데이터 설명서가 없습니다.</param>
        /// <param name="platform">사용 가능한 메타데이터 설명서가 없습니다.</param>
        /// <param name="cookiesSupport">사용 가능한 메타데이터 설명서가 없습니다.</param>
        /// <param name="activeXSupport">사용 가능한 메타데이터 설명서가 없습니다.</param>
        /// <param name="processCode">사용 가능한 메타데이터 설명서가 없습니다.</param>
        public ObjectResult<fnSYSUserGetInfo_Result> fnSYSUserGetInfo(global::System.String userID, global::System.String userPassword, global::System.String userIP, global::System.String browserUserAgent, global::System.String browserID, global::System.String browserVer, global::System.String platform, global::System.String cookiesSupport, global::System.String activeXSupport, ObjectParameter processCode)
        {
            ObjectParameter userIDParameter;
            if (userID != null)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.String));
            }
    
            ObjectParameter userPasswordParameter;
            if (userPassword != null)
            {
                userPasswordParameter = new ObjectParameter("UserPassword", userPassword);
            }
            else
            {
                userPasswordParameter = new ObjectParameter("UserPassword", typeof(global::System.String));
            }
    
            ObjectParameter userIPParameter;
            if (userIP != null)
            {
                userIPParameter = new ObjectParameter("UserIP", userIP);
            }
            else
            {
                userIPParameter = new ObjectParameter("UserIP", typeof(global::System.String));
            }
    
            ObjectParameter browserUserAgentParameter;
            if (browserUserAgent != null)
            {
                browserUserAgentParameter = new ObjectParameter("BrowserUserAgent", browserUserAgent);
            }
            else
            {
                browserUserAgentParameter = new ObjectParameter("BrowserUserAgent", typeof(global::System.String));
            }
    
            ObjectParameter browserIDParameter;
            if (browserID != null)
            {
                browserIDParameter = new ObjectParameter("BrowserID", browserID);
            }
            else
            {
                browserIDParameter = new ObjectParameter("BrowserID", typeof(global::System.String));
            }
    
            ObjectParameter browserVerParameter;
            if (browserVer != null)
            {
                browserVerParameter = new ObjectParameter("BrowserVer", browserVer);
            }
            else
            {
                browserVerParameter = new ObjectParameter("BrowserVer", typeof(global::System.String));
            }
    
            ObjectParameter platformParameter;
            if (platform != null)
            {
                platformParameter = new ObjectParameter("Platform", platform);
            }
            else
            {
                platformParameter = new ObjectParameter("Platform", typeof(global::System.String));
            }
    
            ObjectParameter cookiesSupportParameter;
            if (cookiesSupport != null)
            {
                cookiesSupportParameter = new ObjectParameter("CookiesSupport", cookiesSupport);
            }
            else
            {
                cookiesSupportParameter = new ObjectParameter("CookiesSupport", typeof(global::System.String));
            }
    
            ObjectParameter activeXSupportParameter;
            if (activeXSupport != null)
            {
                activeXSupportParameter = new ObjectParameter("ActiveXSupport", activeXSupport);
            }
            else
            {
                activeXSupportParameter = new ObjectParameter("ActiveXSupport", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<fnSYSUserGetInfo_Result>("fnSYSUserGetInfo", userIDParameter, userPasswordParameter, userIPParameter, browserUserAgentParameter, browserIDParameter, browserVerParameter, platformParameter, cookiesSupportParameter, activeXSupportParameter, processCode);
        }
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        /// <param name="userID">사용 가능한 메타데이터 설명서가 없습니다.</param>
        /// <param name="loginTime">사용 가능한 메타데이터 설명서가 없습니다.</param>
        /// <param name="userIP">사용 가능한 메타데이터 설명서가 없습니다.</param>
        /// <param name="processCode">사용 가능한 메타데이터 설명서가 없습니다.</param>
        public ObjectResult<fnSYSUserGetInfo_Result> fnSYSUserReGetInfo(global::System.String userID, global::System.String loginTime, global::System.String userIP, ObjectParameter processCode)
        {
            ObjectParameter userIDParameter;
            if (userID != null)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.String));
            }
    
            ObjectParameter loginTimeParameter;
            if (loginTime != null)
            {
                loginTimeParameter = new ObjectParameter("LoginTime", loginTime);
            }
            else
            {
                loginTimeParameter = new ObjectParameter("LoginTime", typeof(global::System.String));
            }
    
            ObjectParameter userIPParameter;
            if (userIP != null)
            {
                userIPParameter = new ObjectParameter("UserIP", userIP);
            }
            else
            {
                userIPParameter = new ObjectParameter("UserIP", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<fnSYSUserGetInfo_Result>("fnSYSUserReGetInfo", userIDParameter, loginTimeParameter, userIPParameter, processCode);
        }
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        /// <param name="userID">사용 가능한 메타데이터 설명서가 없습니다.</param>
        /// <param name="menuID">사용 가능한 메타데이터 설명서가 없습니다.</param>
        public ObjectResult<fnSYSUserGetAuthority_Result> fnSYSUserGetAuthority(global::System.String userID, global::System.String menuID)
        {
            ObjectParameter userIDParameter;
            if (userID != null)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.String));
            }
    
            ObjectParameter menuIDParameter;
            if (menuID != null)
            {
                menuIDParameter = new ObjectParameter("MenuID", menuID);
            }
            else
            {
                menuIDParameter = new ObjectParameter("MenuID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<fnSYSUserGetAuthority_Result>("fnSYSUserGetAuthority", userIDParameter, menuIDParameter);
        }
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        /// <param name="menuID">사용 가능한 메타데이터 설명서가 없습니다.</param>
        /// <param name="iP">사용 가능한 메타데이터 설명서가 없습니다.</param>
        /// <param name="userID">사용 가능한 메타데이터 설명서가 없습니다.</param>
        /// <param name="browserUserAgent">사용 가능한 메타데이터 설명서가 없습니다.</param>
        /// <param name="browserID">사용 가능한 메타데이터 설명서가 없습니다.</param>
        /// <param name="browserVer">사용 가능한 메타데이터 설명서가 없습니다.</param>
        /// <param name="platform">사용 가능한 메타데이터 설명서가 없습니다.</param>
        /// <param name="cookiesSupport">사용 가능한 메타데이터 설명서가 없습니다.</param>
        /// <param name="activeXSupport">사용 가능한 메타데이터 설명서가 없습니다.</param>
        public int fnVisitLogInsert(global::System.String menuID, global::System.String iP, global::System.String userID, global::System.String browserUserAgent, global::System.String browserID, global::System.String browserVer, global::System.String platform, global::System.String cookiesSupport, global::System.String activeXSupport)
        {
            ObjectParameter menuIDParameter;
            if (menuID != null)
            {
                menuIDParameter = new ObjectParameter("MenuID", menuID);
            }
            else
            {
                menuIDParameter = new ObjectParameter("MenuID", typeof(global::System.String));
            }
    
            ObjectParameter iPParameter;
            if (iP != null)
            {
                iPParameter = new ObjectParameter("IP", iP);
            }
            else
            {
                iPParameter = new ObjectParameter("IP", typeof(global::System.String));
            }
    
            ObjectParameter userIDParameter;
            if (userID != null)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.String));
            }
    
            ObjectParameter browserUserAgentParameter;
            if (browserUserAgent != null)
            {
                browserUserAgentParameter = new ObjectParameter("BrowserUserAgent", browserUserAgent);
            }
            else
            {
                browserUserAgentParameter = new ObjectParameter("BrowserUserAgent", typeof(global::System.String));
            }
    
            ObjectParameter browserIDParameter;
            if (browserID != null)
            {
                browserIDParameter = new ObjectParameter("BrowserID", browserID);
            }
            else
            {
                browserIDParameter = new ObjectParameter("BrowserID", typeof(global::System.String));
            }
    
            ObjectParameter browserVerParameter;
            if (browserVer != null)
            {
                browserVerParameter = new ObjectParameter("BrowserVer", browserVer);
            }
            else
            {
                browserVerParameter = new ObjectParameter("BrowserVer", typeof(global::System.String));
            }
    
            ObjectParameter platformParameter;
            if (platform != null)
            {
                platformParameter = new ObjectParameter("Platform", platform);
            }
            else
            {
                platformParameter = new ObjectParameter("Platform", typeof(global::System.String));
            }
    
            ObjectParameter cookiesSupportParameter;
            if (cookiesSupport != null)
            {
                cookiesSupportParameter = new ObjectParameter("CookiesSupport", cookiesSupport);
            }
            else
            {
                cookiesSupportParameter = new ObjectParameter("CookiesSupport", typeof(global::System.String));
            }
    
            ObjectParameter activeXSupportParameter;
            if (activeXSupport != null)
            {
                activeXSupportParameter = new ObjectParameter("ActiveXSupport", activeXSupport);
            }
            else
            {
                activeXSupportParameter = new ObjectParameter("ActiveXSupport", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("fnVisitLogInsert", menuIDParameter, iPParameter, userIDParameter, browserUserAgentParameter, browserIDParameter, browserVerParameter, platformParameter, cookiesSupportParameter, activeXSupportParameter);
        }
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        /// <param name="userID">사용 가능한 메타데이터 설명서가 없습니다.</param>
        /// <param name="menuID">사용 가능한 메타데이터 설명서가 없습니다.</param>
        public ObjectResult<fnSYSUserGetAuthorityGroup_Result> fnSYSUserGetAuthorityGroup(global::System.String userID, global::System.String menuID)
        {
            ObjectParameter userIDParameter;
            if (userID != null)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.String));
            }
    
            ObjectParameter menuIDParameter;
            if (menuID != null)
            {
                menuIDParameter = new ObjectParameter("MenuID", menuID);
            }
            else
            {
                menuIDParameter = new ObjectParameter("MenuID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<fnSYSUserGetAuthorityGroup_Result>("fnSYSUserGetAuthorityGroup", userIDParameter, menuIDParameter);
        }

        #endregion

    }

    #endregion

    #region 엔터티
    
    /// <summary>
    /// 사용 가능한 메타데이터 설명서가 없습니다.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MVC4BaseModel", Name="tbMember")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tbMember : EntityObject
    {
        #region 팩터리 메서드
    
        /// <summary>
        /// 새 tbMember 개체를 만듭니다.
        /// </summary>
        /// <param name="userID">UserID 속성의 초기 값입니다.</param>
        /// <param name="password">Password 속성의 초기 값입니다.</param>
        /// <param name="useYN">UseYN 속성의 초기 값입니다.</param>
        /// <param name="regDT">RegDT 속성의 초기 값입니다.</param>
        public static tbMember CreatetbMember(global::System.String userID, global::System.String password, global::System.String useYN, global::System.DateTime regDT)
        {
            tbMember tbMember = new tbMember();
            tbMember.UserID = userID;
            tbMember.Password = password;
            tbMember.UseYN = useYN;
            tbMember.RegDT = regDT;
            return tbMember;
        }

        #endregion

        #region 기본 속성
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Nickname
        {
            get
            {
                return _Nickname;
            }
            set
            {
                OnNicknameChanging(value);
                ReportPropertyChanging("Nickname");
                _Nickname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Nickname");
                OnNicknameChanged();
            }
        }
        private global::System.String _Nickname;
        partial void OnNicknameChanging(global::System.String value);
        partial void OnNicknameChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UseYN
        {
            get
            {
                return _UseYN;
            }
            set
            {
                OnUseYNChanging(value);
                ReportPropertyChanging("UseYN");
                _UseYN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UseYN");
                OnUseYNChanged();
            }
        }
        private global::System.String _UseYN;
        partial void OnUseYNChanging(global::System.String value);
        partial void OnUseYNChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegID
        {
            get
            {
                return _RegID;
            }
            set
            {
                OnRegIDChanging(value);
                ReportPropertyChanging("RegID");
                _RegID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegID");
                OnRegIDChanged();
            }
        }
        private global::System.String _RegID;
        partial void OnRegIDChanging(global::System.String value);
        partial void OnRegIDChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegIP
        {
            get
            {
                return _RegIP;
            }
            set
            {
                OnRegIPChanging(value);
                ReportPropertyChanging("RegIP");
                _RegIP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegIP");
                OnRegIPChanged();
            }
        }
        private global::System.String _RegIP;
        partial void OnRegIPChanging(global::System.String value);
        partial void OnRegIPChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RegDT
        {
            get
            {
                return _RegDT;
            }
            set
            {
                OnRegDTChanging(value);
                ReportPropertyChanging("RegDT");
                _RegDT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegDT");
                OnRegDTChanged();
            }
        }
        private global::System.DateTime _RegDT;
        partial void OnRegDTChanging(global::System.DateTime value);
        partial void OnRegDTChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModID
        {
            get
            {
                return _ModID;
            }
            set
            {
                OnModIDChanging(value);
                ReportPropertyChanging("ModID");
                _ModID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModID");
                OnModIDChanged();
            }
        }
        private global::System.String _ModID;
        partial void OnModIDChanging(global::System.String value);
        partial void OnModIDChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModIP
        {
            get
            {
                return _ModIP;
            }
            set
            {
                OnModIPChanging(value);
                ReportPropertyChanging("ModIP");
                _ModIP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModIP");
                OnModIPChanged();
            }
        }
        private global::System.String _ModIP;
        partial void OnModIPChanging(global::System.String value);
        partial void OnModIPChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModDT
        {
            get
            {
                return _ModDT;
            }
            set
            {
                OnModDTChanging(value);
                ReportPropertyChanging("ModDT");
                _ModDT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModDT");
                OnModDTChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModDT;
        partial void OnModDTChanging(Nullable<global::System.DateTime> value);
        partial void OnModDTChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 사용 가능한 메타데이터 설명서가 없습니다.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MVC4BaseModel", Name="tbMemberLoginLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tbMemberLoginLog : EntityObject
    {
        #region 팩터리 메서드
    
        /// <summary>
        /// 새 tbMemberLoginLog 개체를 만듭니다.
        /// </summary>
        /// <param name="logNo">LogNo 속성의 초기 값입니다.</param>
        /// <param name="userID">UserID 속성의 초기 값입니다.</param>
        /// <param name="loginIP">LoginIP 속성의 초기 값입니다.</param>
        /// <param name="loginTime">LoginTime 속성의 초기 값입니다.</param>
        /// <param name="browserUserAgent">BrowserUserAgent 속성의 초기 값입니다.</param>
        /// <param name="browserID">BrowserID 속성의 초기 값입니다.</param>
        /// <param name="browserVer">BrowserVer 속성의 초기 값입니다.</param>
        /// <param name="platform">Platform 속성의 초기 값입니다.</param>
        /// <param name="cookiesSupport">CookiesSupport 속성의 초기 값입니다.</param>
        /// <param name="activeXSupport">ActiveXSupport 속성의 초기 값입니다.</param>
        public static tbMemberLoginLog CreatetbMemberLoginLog(global::System.Decimal logNo, global::System.String userID, global::System.String loginIP, global::System.String loginTime, global::System.String browserUserAgent, global::System.String browserID, global::System.String browserVer, global::System.String platform, global::System.String cookiesSupport, global::System.String activeXSupport)
        {
            tbMemberLoginLog tbMemberLoginLog = new tbMemberLoginLog();
            tbMemberLoginLog.LogNo = logNo;
            tbMemberLoginLog.UserID = userID;
            tbMemberLoginLog.LoginIP = loginIP;
            tbMemberLoginLog.LoginTime = loginTime;
            tbMemberLoginLog.BrowserUserAgent = browserUserAgent;
            tbMemberLoginLog.BrowserID = browserID;
            tbMemberLoginLog.BrowserVer = browserVer;
            tbMemberLoginLog.Platform = platform;
            tbMemberLoginLog.CookiesSupport = cookiesSupport;
            tbMemberLoginLog.ActiveXSupport = activeXSupport;
            return tbMemberLoginLog;
        }

        #endregion

        #region 기본 속성
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal LogNo
        {
            get
            {
                return _LogNo;
            }
            set
            {
                if (_LogNo != value)
                {
                    OnLogNoChanging(value);
                    ReportPropertyChanging("LogNo");
                    _LogNo = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LogNo");
                    OnLogNoChanged();
                }
            }
        }
        private global::System.Decimal _LogNo;
        partial void OnLogNoChanging(global::System.Decimal value);
        partial void OnLogNoChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoginIP
        {
            get
            {
                return _LoginIP;
            }
            set
            {
                OnLoginIPChanging(value);
                ReportPropertyChanging("LoginIP");
                _LoginIP = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoginIP");
                OnLoginIPChanged();
            }
        }
        private global::System.String _LoginIP;
        partial void OnLoginIPChanging(global::System.String value);
        partial void OnLoginIPChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoginTime
        {
            get
            {
                return _LoginTime;
            }
            set
            {
                OnLoginTimeChanging(value);
                ReportPropertyChanging("LoginTime");
                _LoginTime = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoginTime");
                OnLoginTimeChanged();
            }
        }
        private global::System.String _LoginTime;
        partial void OnLoginTimeChanging(global::System.String value);
        partial void OnLoginTimeChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BrowserUserAgent
        {
            get
            {
                return _BrowserUserAgent;
            }
            set
            {
                OnBrowserUserAgentChanging(value);
                ReportPropertyChanging("BrowserUserAgent");
                _BrowserUserAgent = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BrowserUserAgent");
                OnBrowserUserAgentChanged();
            }
        }
        private global::System.String _BrowserUserAgent;
        partial void OnBrowserUserAgentChanging(global::System.String value);
        partial void OnBrowserUserAgentChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BrowserID
        {
            get
            {
                return _BrowserID;
            }
            set
            {
                OnBrowserIDChanging(value);
                ReportPropertyChanging("BrowserID");
                _BrowserID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BrowserID");
                OnBrowserIDChanged();
            }
        }
        private global::System.String _BrowserID;
        partial void OnBrowserIDChanging(global::System.String value);
        partial void OnBrowserIDChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BrowserVer
        {
            get
            {
                return _BrowserVer;
            }
            set
            {
                OnBrowserVerChanging(value);
                ReportPropertyChanging("BrowserVer");
                _BrowserVer = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BrowserVer");
                OnBrowserVerChanged();
            }
        }
        private global::System.String _BrowserVer;
        partial void OnBrowserVerChanging(global::System.String value);
        partial void OnBrowserVerChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Platform
        {
            get
            {
                return _Platform;
            }
            set
            {
                OnPlatformChanging(value);
                ReportPropertyChanging("Platform");
                _Platform = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Platform");
                OnPlatformChanged();
            }
        }
        private global::System.String _Platform;
        partial void OnPlatformChanging(global::System.String value);
        partial void OnPlatformChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CookiesSupport
        {
            get
            {
                return _CookiesSupport;
            }
            set
            {
                OnCookiesSupportChanging(value);
                ReportPropertyChanging("CookiesSupport");
                _CookiesSupport = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CookiesSupport");
                OnCookiesSupportChanged();
            }
        }
        private global::System.String _CookiesSupport;
        partial void OnCookiesSupportChanging(global::System.String value);
        partial void OnCookiesSupportChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ActiveXSupport
        {
            get
            {
                return _ActiveXSupport;
            }
            set
            {
                OnActiveXSupportChanging(value);
                ReportPropertyChanging("ActiveXSupport");
                _ActiveXSupport = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ActiveXSupport");
                OnActiveXSupportChanged();
            }
        }
        private global::System.String _ActiveXSupport;
        partial void OnActiveXSupportChanging(global::System.String value);
        partial void OnActiveXSupportChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 사용 가능한 메타데이터 설명서가 없습니다.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MVC4BaseModel", Name="tbMemberLoginSession")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tbMemberLoginSession : EntityObject
    {
        #region 팩터리 메서드
    
        /// <summary>
        /// 새 tbMemberLoginSession 개체를 만듭니다.
        /// </summary>
        /// <param name="userID">UserID 속성의 초기 값입니다.</param>
        /// <param name="loginIP">LoginIP 속성의 초기 값입니다.</param>
        /// <param name="loginTime">LoginTime 속성의 초기 값입니다.</param>
        public static tbMemberLoginSession CreatetbMemberLoginSession(global::System.String userID, global::System.String loginIP, global::System.String loginTime)
        {
            tbMemberLoginSession tbMemberLoginSession = new tbMemberLoginSession();
            tbMemberLoginSession.UserID = userID;
            tbMemberLoginSession.LoginIP = loginIP;
            tbMemberLoginSession.LoginTime = loginTime;
            return tbMemberLoginSession;
        }

        #endregion

        #region 기본 속성
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoginIP
        {
            get
            {
                return _LoginIP;
            }
            set
            {
                OnLoginIPChanging(value);
                ReportPropertyChanging("LoginIP");
                _LoginIP = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoginIP");
                OnLoginIPChanged();
            }
        }
        private global::System.String _LoginIP;
        partial void OnLoginIPChanging(global::System.String value);
        partial void OnLoginIPChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoginTime
        {
            get
            {
                return _LoginTime;
            }
            set
            {
                OnLoginTimeChanging(value);
                ReportPropertyChanging("LoginTime");
                _LoginTime = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoginTime");
                OnLoginTimeChanged();
            }
        }
        private global::System.String _LoginTime;
        partial void OnLoginTimeChanging(global::System.String value);
        partial void OnLoginTimeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 사용 가능한 메타데이터 설명서가 없습니다.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MVC4BaseModel", Name="tbSYSAuthority")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tbSYSAuthority : EntityObject
    {
        #region 팩터리 메서드
    
        /// <summary>
        /// 새 tbSYSAuthority 개체를 만듭니다.
        /// </summary>
        /// <param name="authorityID">AuthorityID 속성의 초기 값입니다.</param>
        /// <param name="regDT">RegDT 속성의 초기 값입니다.</param>
        public static tbSYSAuthority CreatetbSYSAuthority(global::System.String authorityID, global::System.DateTime regDT)
        {
            tbSYSAuthority tbSYSAuthority = new tbSYSAuthority();
            tbSYSAuthority.AuthorityID = authorityID;
            tbSYSAuthority.RegDT = regDT;
            return tbSYSAuthority;
        }

        #endregion

        #region 기본 속성
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AuthorityID
        {
            get
            {
                return _AuthorityID;
            }
            set
            {
                if (_AuthorityID != value)
                {
                    OnAuthorityIDChanging(value);
                    ReportPropertyChanging("AuthorityID");
                    _AuthorityID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("AuthorityID");
                    OnAuthorityIDChanged();
                }
            }
        }
        private global::System.String _AuthorityID;
        partial void OnAuthorityIDChanging(global::System.String value);
        partial void OnAuthorityIDChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AuthorityName
        {
            get
            {
                return _AuthorityName;
            }
            set
            {
                OnAuthorityNameChanging(value);
                ReportPropertyChanging("AuthorityName");
                _AuthorityName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AuthorityName");
                OnAuthorityNameChanged();
            }
        }
        private global::System.String _AuthorityName;
        partial void OnAuthorityNameChanging(global::System.String value);
        partial void OnAuthorityNameChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegID
        {
            get
            {
                return _RegID;
            }
            set
            {
                OnRegIDChanging(value);
                ReportPropertyChanging("RegID");
                _RegID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegID");
                OnRegIDChanged();
            }
        }
        private global::System.String _RegID;
        partial void OnRegIDChanging(global::System.String value);
        partial void OnRegIDChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegIP
        {
            get
            {
                return _RegIP;
            }
            set
            {
                OnRegIPChanging(value);
                ReportPropertyChanging("RegIP");
                _RegIP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegIP");
                OnRegIPChanged();
            }
        }
        private global::System.String _RegIP;
        partial void OnRegIPChanging(global::System.String value);
        partial void OnRegIPChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RegDT
        {
            get
            {
                return _RegDT;
            }
            set
            {
                OnRegDTChanging(value);
                ReportPropertyChanging("RegDT");
                _RegDT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegDT");
                OnRegDTChanged();
            }
        }
        private global::System.DateTime _RegDT;
        partial void OnRegDTChanging(global::System.DateTime value);
        partial void OnRegDTChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModID
        {
            get
            {
                return _ModID;
            }
            set
            {
                OnModIDChanging(value);
                ReportPropertyChanging("ModID");
                _ModID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModID");
                OnModIDChanged();
            }
        }
        private global::System.String _ModID;
        partial void OnModIDChanging(global::System.String value);
        partial void OnModIDChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModIP
        {
            get
            {
                return _ModIP;
            }
            set
            {
                OnModIPChanging(value);
                ReportPropertyChanging("ModIP");
                _ModIP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModIP");
                OnModIPChanged();
            }
        }
        private global::System.String _ModIP;
        partial void OnModIPChanging(global::System.String value);
        partial void OnModIPChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModDT
        {
            get
            {
                return _ModDT;
            }
            set
            {
                OnModDTChanging(value);
                ReportPropertyChanging("ModDT");
                _ModDT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModDT");
                OnModDTChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModDT;
        partial void OnModDTChanging(Nullable<global::System.DateTime> value);
        partial void OnModDTChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 사용 가능한 메타데이터 설명서가 없습니다.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MVC4BaseModel", Name="tbSYSCode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tbSYSCode : EntityObject
    {
        #region 팩터리 메서드
    
        /// <summary>
        /// 새 tbSYSCode 개체를 만듭니다.
        /// </summary>
        /// <param name="mainCode">MainCode 속성의 초기 값입니다.</param>
        /// <param name="subCode">SubCode 속성의 초기 값입니다.</param>
        /// <param name="useYN">UseYN 속성의 초기 값입니다.</param>
        /// <param name="regDT">RegDT 속성의 초기 값입니다.</param>
        public static tbSYSCode CreatetbSYSCode(global::System.String mainCode, global::System.String subCode, global::System.String useYN, global::System.DateTime regDT)
        {
            tbSYSCode tbSYSCode = new tbSYSCode();
            tbSYSCode.MainCode = mainCode;
            tbSYSCode.SubCode = subCode;
            tbSYSCode.UseYN = useYN;
            tbSYSCode.RegDT = regDT;
            return tbSYSCode;
        }

        #endregion

        #region 기본 속성
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MainCode
        {
            get
            {
                return _MainCode;
            }
            set
            {
                if (_MainCode != value)
                {
                    OnMainCodeChanging(value);
                    ReportPropertyChanging("MainCode");
                    _MainCode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MainCode");
                    OnMainCodeChanged();
                }
            }
        }
        private global::System.String _MainCode;
        partial void OnMainCodeChanging(global::System.String value);
        partial void OnMainCodeChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SubCode
        {
            get
            {
                return _SubCode;
            }
            set
            {
                if (_SubCode != value)
                {
                    OnSubCodeChanging(value);
                    ReportPropertyChanging("SubCode");
                    _SubCode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SubCode");
                    OnSubCodeChanged();
                }
            }
        }
        private global::System.String _SubCode;
        partial void OnSubCodeChanging(global::System.String value);
        partial void OnSubCodeChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UseYN
        {
            get
            {
                return _UseYN;
            }
            set
            {
                OnUseYNChanging(value);
                ReportPropertyChanging("UseYN");
                _UseYN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UseYN");
                OnUseYNChanged();
            }
        }
        private global::System.String _UseYN;
        partial void OnUseYNChanging(global::System.String value);
        partial void OnUseYNChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CodeName
        {
            get
            {
                return _CodeName;
            }
            set
            {
                OnCodeNameChanging(value);
                ReportPropertyChanging("CodeName");
                _CodeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CodeName");
                OnCodeNameChanged();
            }
        }
        private global::System.String _CodeName;
        partial void OnCodeNameChanging(global::System.String value);
        partial void OnCodeNameChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegID
        {
            get
            {
                return _RegID;
            }
            set
            {
                OnRegIDChanging(value);
                ReportPropertyChanging("RegID");
                _RegID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegID");
                OnRegIDChanged();
            }
        }
        private global::System.String _RegID;
        partial void OnRegIDChanging(global::System.String value);
        partial void OnRegIDChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegIP
        {
            get
            {
                return _RegIP;
            }
            set
            {
                OnRegIPChanging(value);
                ReportPropertyChanging("RegIP");
                _RegIP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegIP");
                OnRegIPChanged();
            }
        }
        private global::System.String _RegIP;
        partial void OnRegIPChanging(global::System.String value);
        partial void OnRegIPChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RegDT
        {
            get
            {
                return _RegDT;
            }
            set
            {
                OnRegDTChanging(value);
                ReportPropertyChanging("RegDT");
                _RegDT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegDT");
                OnRegDTChanged();
            }
        }
        private global::System.DateTime _RegDT;
        partial void OnRegDTChanging(global::System.DateTime value);
        partial void OnRegDTChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModID
        {
            get
            {
                return _ModID;
            }
            set
            {
                OnModIDChanging(value);
                ReportPropertyChanging("ModID");
                _ModID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModID");
                OnModIDChanged();
            }
        }
        private global::System.String _ModID;
        partial void OnModIDChanging(global::System.String value);
        partial void OnModIDChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModIP
        {
            get
            {
                return _ModIP;
            }
            set
            {
                OnModIPChanging(value);
                ReportPropertyChanging("ModIP");
                _ModIP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModIP");
                OnModIPChanged();
            }
        }
        private global::System.String _ModIP;
        partial void OnModIPChanging(global::System.String value);
        partial void OnModIPChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModDT
        {
            get
            {
                return _ModDT;
            }
            set
            {
                OnModDTChanging(value);
                ReportPropertyChanging("ModDT");
                _ModDT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModDT");
                OnModDTChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModDT;
        partial void OnModDTChanging(Nullable<global::System.DateTime> value);
        partial void OnModDTChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private Nullable<global::System.Int32> _SortOrder;
        partial void OnSortOrderChanging(Nullable<global::System.Int32> value);
        partial void OnSortOrderChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 사용 가능한 메타데이터 설명서가 없습니다.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MVC4BaseModel", Name="tbSYSMenu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tbSYSMenu : EntityObject
    {
        #region 팩터리 메서드
    
        /// <summary>
        /// 새 tbSYSMenu 개체를 만듭니다.
        /// </summary>
        /// <param name="menuID">MenuID 속성의 초기 값입니다.</param>
        /// <param name="regDT">RegDT 속성의 초기 값입니다.</param>
        public static tbSYSMenu CreatetbSYSMenu(global::System.String menuID, global::System.DateTime regDT)
        {
            tbSYSMenu tbSYSMenu = new tbSYSMenu();
            tbSYSMenu.MenuID = menuID;
            tbSYSMenu.RegDT = regDT;
            return tbSYSMenu;
        }

        #endregion

        #region 기본 속성
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MenuID
        {
            get
            {
                return _MenuID;
            }
            set
            {
                if (_MenuID != value)
                {
                    OnMenuIDChanging(value);
                    ReportPropertyChanging("MenuID");
                    _MenuID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MenuID");
                    OnMenuIDChanged();
                }
            }
        }
        private global::System.String _MenuID;
        partial void OnMenuIDChanging(global::System.String value);
        partial void OnMenuIDChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TopMenuID
        {
            get
            {
                return _TopMenuID;
            }
            set
            {
                OnTopMenuIDChanging(value);
                ReportPropertyChanging("TopMenuID");
                _TopMenuID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TopMenuID");
                OnTopMenuIDChanged();
            }
        }
        private global::System.String _TopMenuID;
        partial void OnTopMenuIDChanging(global::System.String value);
        partial void OnTopMenuIDChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MenuName
        {
            get
            {
                return _MenuName;
            }
            set
            {
                OnMenuNameChanging(value);
                ReportPropertyChanging("MenuName");
                _MenuName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MenuName");
                OnMenuNameChanged();
            }
        }
        private global::System.String _MenuName;
        partial void OnMenuNameChanging(global::System.String value);
        partial void OnMenuNameChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private Nullable<global::System.Int32> _SortOrder;
        partial void OnSortOrderChanging(Nullable<global::System.Int32> value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ParentMenuID
        {
            get
            {
                return _ParentMenuID;
            }
            set
            {
                OnParentMenuIDChanging(value);
                ReportPropertyChanging("ParentMenuID");
                _ParentMenuID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ParentMenuID");
                OnParentMenuIDChanged();
            }
        }
        private global::System.String _ParentMenuID;
        partial void OnParentMenuIDChanging(global::System.String value);
        partial void OnParentMenuIDChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PageURL
        {
            get
            {
                return _PageURL;
            }
            set
            {
                OnPageURLChanging(value);
                ReportPropertyChanging("PageURL");
                _PageURL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PageURL");
                OnPageURLChanged();
            }
        }
        private global::System.String _PageURL;
        partial void OnPageURLChanging(global::System.String value);
        partial void OnPageURLChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MenuLevel
        {
            get
            {
                return _MenuLevel;
            }
            set
            {
                OnMenuLevelChanging(value);
                ReportPropertyChanging("MenuLevel");
                _MenuLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MenuLevel");
                OnMenuLevelChanged();
            }
        }
        private Nullable<global::System.Int32> _MenuLevel;
        partial void OnMenuLevelChanging(Nullable<global::System.Int32> value);
        partial void OnMenuLevelChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DisplayYN
        {
            get
            {
                return _DisplayYN;
            }
            set
            {
                OnDisplayYNChanging(value);
                ReportPropertyChanging("DisplayYN");
                _DisplayYN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DisplayYN");
                OnDisplayYNChanged();
            }
        }
        private global::System.String _DisplayYN;
        partial void OnDisplayYNChanging(global::System.String value);
        partial void OnDisplayYNChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SubMainYN
        {
            get
            {
                return _SubMainYN;
            }
            set
            {
                OnSubMainYNChanging(value);
                ReportPropertyChanging("SubMainYN");
                _SubMainYN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SubMainYN");
                OnSubMainYNChanged();
            }
        }
        private global::System.String _SubMainYN;
        partial void OnSubMainYNChanging(global::System.String value);
        partial void OnSubMainYNChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UseYN
        {
            get
            {
                return _UseYN;
            }
            set
            {
                OnUseYNChanging(value);
                ReportPropertyChanging("UseYN");
                _UseYN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UseYN");
                OnUseYNChanged();
            }
        }
        private global::System.String _UseYN;
        partial void OnUseYNChanging(global::System.String value);
        partial void OnUseYNChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobileYN
        {
            get
            {
                return _MobileYN;
            }
            set
            {
                OnMobileYNChanging(value);
                ReportPropertyChanging("MobileYN");
                _MobileYN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobileYN");
                OnMobileYNChanged();
            }
        }
        private global::System.String _MobileYN;
        partial void OnMobileYNChanging(global::System.String value);
        partial void OnMobileYNChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegID
        {
            get
            {
                return _RegID;
            }
            set
            {
                OnRegIDChanging(value);
                ReportPropertyChanging("RegID");
                _RegID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegID");
                OnRegIDChanged();
            }
        }
        private global::System.String _RegID;
        partial void OnRegIDChanging(global::System.String value);
        partial void OnRegIDChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegIP
        {
            get
            {
                return _RegIP;
            }
            set
            {
                OnRegIPChanging(value);
                ReportPropertyChanging("RegIP");
                _RegIP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegIP");
                OnRegIPChanged();
            }
        }
        private global::System.String _RegIP;
        partial void OnRegIPChanging(global::System.String value);
        partial void OnRegIPChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RegDT
        {
            get
            {
                return _RegDT;
            }
            set
            {
                OnRegDTChanging(value);
                ReportPropertyChanging("RegDT");
                _RegDT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegDT");
                OnRegDTChanged();
            }
        }
        private global::System.DateTime _RegDT;
        partial void OnRegDTChanging(global::System.DateTime value);
        partial void OnRegDTChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModID
        {
            get
            {
                return _ModID;
            }
            set
            {
                OnModIDChanging(value);
                ReportPropertyChanging("ModID");
                _ModID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModID");
                OnModIDChanged();
            }
        }
        private global::System.String _ModID;
        partial void OnModIDChanging(global::System.String value);
        partial void OnModIDChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModIP
        {
            get
            {
                return _ModIP;
            }
            set
            {
                OnModIPChanging(value);
                ReportPropertyChanging("ModIP");
                _ModIP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModIP");
                OnModIPChanged();
            }
        }
        private global::System.String _ModIP;
        partial void OnModIPChanging(global::System.String value);
        partial void OnModIPChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModDT
        {
            get
            {
                return _ModDT;
            }
            set
            {
                OnModDTChanging(value);
                ReportPropertyChanging("ModDT");
                _ModDT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModDT");
                OnModDTChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModDT;
        partial void OnModDTChanging(Nullable<global::System.DateTime> value);
        partial void OnModDTChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 사용 가능한 메타데이터 설명서가 없습니다.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MVC4BaseModel", Name="tbSYSMenuRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tbSYSMenuRole : EntityObject
    {
        #region 팩터리 메서드
    
        /// <summary>
        /// 새 tbSYSMenuRole 개체를 만듭니다.
        /// </summary>
        /// <param name="menuID">MenuID 속성의 초기 값입니다.</param>
        /// <param name="regDT">RegDT 속성의 초기 값입니다.</param>
        public static tbSYSMenuRole CreatetbSYSMenuRole(global::System.String menuID, global::System.DateTime regDT)
        {
            tbSYSMenuRole tbSYSMenuRole = new tbSYSMenuRole();
            tbSYSMenuRole.MenuID = menuID;
            tbSYSMenuRole.RegDT = regDT;
            return tbSYSMenuRole;
        }

        #endregion

        #region 기본 속성
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MenuID
        {
            get
            {
                return _MenuID;
            }
            set
            {
                if (_MenuID != value)
                {
                    OnMenuIDChanging(value);
                    ReportPropertyChanging("MenuID");
                    _MenuID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MenuID");
                    OnMenuIDChanged();
                }
            }
        }
        private global::System.String _MenuID;
        partial void OnMenuIDChanging(global::System.String value);
        partial void OnMenuIDChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private global::System.String _RoleID;
        partial void OnRoleIDChanging(global::System.String value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegID
        {
            get
            {
                return _RegID;
            }
            set
            {
                OnRegIDChanging(value);
                ReportPropertyChanging("RegID");
                _RegID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegID");
                OnRegIDChanged();
            }
        }
        private global::System.String _RegID;
        partial void OnRegIDChanging(global::System.String value);
        partial void OnRegIDChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegIP
        {
            get
            {
                return _RegIP;
            }
            set
            {
                OnRegIPChanging(value);
                ReportPropertyChanging("RegIP");
                _RegIP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegIP");
                OnRegIPChanged();
            }
        }
        private global::System.String _RegIP;
        partial void OnRegIPChanging(global::System.String value);
        partial void OnRegIPChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RegDT
        {
            get
            {
                return _RegDT;
            }
            set
            {
                OnRegDTChanging(value);
                ReportPropertyChanging("RegDT");
                _RegDT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegDT");
                OnRegDTChanged();
            }
        }
        private global::System.DateTime _RegDT;
        partial void OnRegDTChanging(global::System.DateTime value);
        partial void OnRegDTChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModID
        {
            get
            {
                return _ModID;
            }
            set
            {
                OnModIDChanging(value);
                ReportPropertyChanging("ModID");
                _ModID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModID");
                OnModIDChanged();
            }
        }
        private global::System.String _ModID;
        partial void OnModIDChanging(global::System.String value);
        partial void OnModIDChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModIP
        {
            get
            {
                return _ModIP;
            }
            set
            {
                OnModIPChanging(value);
                ReportPropertyChanging("ModIP");
                _ModIP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModIP");
                OnModIPChanged();
            }
        }
        private global::System.String _ModIP;
        partial void OnModIPChanging(global::System.String value);
        partial void OnModIPChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModDT
        {
            get
            {
                return _ModDT;
            }
            set
            {
                OnModDTChanging(value);
                ReportPropertyChanging("ModDT");
                _ModDT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModDT");
                OnModDTChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModDT;
        partial void OnModDTChanging(Nullable<global::System.DateTime> value);
        partial void OnModDTChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 사용 가능한 메타데이터 설명서가 없습니다.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MVC4BaseModel", Name="tbSYSRoleAuthority")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tbSYSRoleAuthority : EntityObject
    {
        #region 팩터리 메서드
    
        /// <summary>
        /// 새 tbSYSRoleAuthority 개체를 만듭니다.
        /// </summary>
        /// <param name="roleID">RoleID 속성의 초기 값입니다.</param>
        /// <param name="regDT">RegDT 속성의 초기 값입니다.</param>
        public static tbSYSRoleAuthority CreatetbSYSRoleAuthority(global::System.String roleID, global::System.DateTime regDT)
        {
            tbSYSRoleAuthority tbSYSRoleAuthority = new tbSYSRoleAuthority();
            tbSYSRoleAuthority.RoleID = roleID;
            tbSYSRoleAuthority.RegDT = regDT;
            return tbSYSRoleAuthority;
        }

        #endregion

        #region 기본 속성
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                if (_RoleID != value)
                {
                    OnRoleIDChanging(value);
                    ReportPropertyChanging("RoleID");
                    _RoleID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("RoleID");
                    OnRoleIDChanged();
                }
            }
        }
        private global::System.String _RoleID;
        partial void OnRoleIDChanging(global::System.String value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AuthorityID
        {
            get
            {
                return _AuthorityID;
            }
            set
            {
                OnAuthorityIDChanging(value);
                ReportPropertyChanging("AuthorityID");
                _AuthorityID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AuthorityID");
                OnAuthorityIDChanged();
            }
        }
        private global::System.String _AuthorityID;
        partial void OnAuthorityIDChanging(global::System.String value);
        partial void OnAuthorityIDChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegID
        {
            get
            {
                return _RegID;
            }
            set
            {
                OnRegIDChanging(value);
                ReportPropertyChanging("RegID");
                _RegID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegID");
                OnRegIDChanged();
            }
        }
        private global::System.String _RegID;
        partial void OnRegIDChanging(global::System.String value);
        partial void OnRegIDChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegIP
        {
            get
            {
                return _RegIP;
            }
            set
            {
                OnRegIPChanging(value);
                ReportPropertyChanging("RegIP");
                _RegIP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegIP");
                OnRegIPChanged();
            }
        }
        private global::System.String _RegIP;
        partial void OnRegIPChanging(global::System.String value);
        partial void OnRegIPChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RegDT
        {
            get
            {
                return _RegDT;
            }
            set
            {
                OnRegDTChanging(value);
                ReportPropertyChanging("RegDT");
                _RegDT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegDT");
                OnRegDTChanged();
            }
        }
        private global::System.DateTime _RegDT;
        partial void OnRegDTChanging(global::System.DateTime value);
        partial void OnRegDTChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModID
        {
            get
            {
                return _ModID;
            }
            set
            {
                OnModIDChanging(value);
                ReportPropertyChanging("ModID");
                _ModID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModID");
                OnModIDChanged();
            }
        }
        private global::System.String _ModID;
        partial void OnModIDChanging(global::System.String value);
        partial void OnModIDChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModIP
        {
            get
            {
                return _ModIP;
            }
            set
            {
                OnModIPChanging(value);
                ReportPropertyChanging("ModIP");
                _ModIP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModIP");
                OnModIPChanged();
            }
        }
        private global::System.String _ModIP;
        partial void OnModIPChanging(global::System.String value);
        partial void OnModIPChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModDT
        {
            get
            {
                return _ModDT;
            }
            set
            {
                OnModDTChanging(value);
                ReportPropertyChanging("ModDT");
                _ModDT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModDT");
                OnModDTChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModDT;
        partial void OnModDTChanging(Nullable<global::System.DateTime> value);
        partial void OnModDTChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 사용 가능한 메타데이터 설명서가 없습니다.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MVC4BaseModel", Name="tbSYSRoleGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tbSYSRoleGroup : EntityObject
    {
        #region 팩터리 메서드
    
        /// <summary>
        /// 새 tbSYSRoleGroup 개체를 만듭니다.
        /// </summary>
        /// <param name="roleID">RoleID 속성의 초기 값입니다.</param>
        /// <param name="regDT">RegDT 속성의 초기 값입니다.</param>
        public static tbSYSRoleGroup CreatetbSYSRoleGroup(global::System.String roleID, global::System.DateTime regDT)
        {
            tbSYSRoleGroup tbSYSRoleGroup = new tbSYSRoleGroup();
            tbSYSRoleGroup.RoleID = roleID;
            tbSYSRoleGroup.RegDT = regDT;
            return tbSYSRoleGroup;
        }

        #endregion

        #region 기본 속성
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                if (_RoleID != value)
                {
                    OnRoleIDChanging(value);
                    ReportPropertyChanging("RoleID");
                    _RoleID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("RoleID");
                    OnRoleIDChanged();
                }
            }
        }
        private global::System.String _RoleID;
        partial void OnRoleIDChanging(global::System.String value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private Nullable<global::System.Int32> _SortOrder;
        partial void OnSortOrderChanging(Nullable<global::System.Int32> value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegID
        {
            get
            {
                return _RegID;
            }
            set
            {
                OnRegIDChanging(value);
                ReportPropertyChanging("RegID");
                _RegID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegID");
                OnRegIDChanged();
            }
        }
        private global::System.String _RegID;
        partial void OnRegIDChanging(global::System.String value);
        partial void OnRegIDChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegIP
        {
            get
            {
                return _RegIP;
            }
            set
            {
                OnRegIPChanging(value);
                ReportPropertyChanging("RegIP");
                _RegIP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegIP");
                OnRegIPChanged();
            }
        }
        private global::System.String _RegIP;
        partial void OnRegIPChanging(global::System.String value);
        partial void OnRegIPChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RegDT
        {
            get
            {
                return _RegDT;
            }
            set
            {
                OnRegDTChanging(value);
                ReportPropertyChanging("RegDT");
                _RegDT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegDT");
                OnRegDTChanged();
            }
        }
        private global::System.DateTime _RegDT;
        partial void OnRegDTChanging(global::System.DateTime value);
        partial void OnRegDTChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModID
        {
            get
            {
                return _ModID;
            }
            set
            {
                OnModIDChanging(value);
                ReportPropertyChanging("ModID");
                _ModID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModID");
                OnModIDChanged();
            }
        }
        private global::System.String _ModID;
        partial void OnModIDChanging(global::System.String value);
        partial void OnModIDChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModIP
        {
            get
            {
                return _ModIP;
            }
            set
            {
                OnModIPChanging(value);
                ReportPropertyChanging("ModIP");
                _ModIP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModIP");
                OnModIPChanged();
            }
        }
        private global::System.String _ModIP;
        partial void OnModIPChanging(global::System.String value);
        partial void OnModIPChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModDT
        {
            get
            {
                return _ModDT;
            }
            set
            {
                OnModDTChanging(value);
                ReportPropertyChanging("ModDT");
                _ModDT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModDT");
                OnModDTChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModDT;
        partial void OnModDTChanging(Nullable<global::System.DateTime> value);
        partial void OnModDTChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 사용 가능한 메타데이터 설명서가 없습니다.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MVC4BaseModel", Name="tbSYSRoleMember")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tbSYSRoleMember : EntityObject
    {
        #region 팩터리 메서드
    
        /// <summary>
        /// 새 tbSYSRoleMember 개체를 만듭니다.
        /// </summary>
        /// <param name="roleID">RoleID 속성의 초기 값입니다.</param>
        /// <param name="userID">UserID 속성의 초기 값입니다.</param>
        /// <param name="regDT">RegDT 속성의 초기 값입니다.</param>
        public static tbSYSRoleMember CreatetbSYSRoleMember(global::System.String roleID, global::System.String userID, global::System.DateTime regDT)
        {
            tbSYSRoleMember tbSYSRoleMember = new tbSYSRoleMember();
            tbSYSRoleMember.RoleID = roleID;
            tbSYSRoleMember.UserID = userID;
            tbSYSRoleMember.RegDT = regDT;
            return tbSYSRoleMember;
        }

        #endregion

        #region 기본 속성
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                if (_RoleID != value)
                {
                    OnRoleIDChanging(value);
                    ReportPropertyChanging("RoleID");
                    _RoleID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("RoleID");
                    OnRoleIDChanged();
                }
            }
        }
        private global::System.String _RoleID;
        partial void OnRoleIDChanging(global::System.String value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegID
        {
            get
            {
                return _RegID;
            }
            set
            {
                OnRegIDChanging(value);
                ReportPropertyChanging("RegID");
                _RegID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegID");
                OnRegIDChanged();
            }
        }
        private global::System.String _RegID;
        partial void OnRegIDChanging(global::System.String value);
        partial void OnRegIDChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegIP
        {
            get
            {
                return _RegIP;
            }
            set
            {
                OnRegIPChanging(value);
                ReportPropertyChanging("RegIP");
                _RegIP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegIP");
                OnRegIPChanged();
            }
        }
        private global::System.String _RegIP;
        partial void OnRegIPChanging(global::System.String value);
        partial void OnRegIPChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RegDT
        {
            get
            {
                return _RegDT;
            }
            set
            {
                OnRegDTChanging(value);
                ReportPropertyChanging("RegDT");
                _RegDT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegDT");
                OnRegDTChanged();
            }
        }
        private global::System.DateTime _RegDT;
        partial void OnRegDTChanging(global::System.DateTime value);
        partial void OnRegDTChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModID
        {
            get
            {
                return _ModID;
            }
            set
            {
                OnModIDChanging(value);
                ReportPropertyChanging("ModID");
                _ModID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModID");
                OnModIDChanged();
            }
        }
        private global::System.String _ModID;
        partial void OnModIDChanging(global::System.String value);
        partial void OnModIDChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModIP
        {
            get
            {
                return _ModIP;
            }
            set
            {
                OnModIPChanging(value);
                ReportPropertyChanging("ModIP");
                _ModIP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModIP");
                OnModIPChanged();
            }
        }
        private global::System.String _ModIP;
        partial void OnModIPChanging(global::System.String value);
        partial void OnModIPChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModDT
        {
            get
            {
                return _ModDT;
            }
            set
            {
                OnModDTChanging(value);
                ReportPropertyChanging("ModDT");
                _ModDT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModDT");
                OnModDTChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModDT;
        partial void OnModDTChanging(Nullable<global::System.DateTime> value);
        partial void OnModDTChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 사용 가능한 메타데이터 설명서가 없습니다.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MVC4BaseModel", Name="tbVisitLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tbVisitLog : EntityObject
    {
        #region 팩터리 메서드
    
        /// <summary>
        /// 새 tbVisitLog 개체를 만듭니다.
        /// </summary>
        /// <param name="logNo">LogNo 속성의 초기 값입니다.</param>
        /// <param name="visitDate">VisitDate 속성의 초기 값입니다.</param>
        public static tbVisitLog CreatetbVisitLog(global::System.Decimal logNo, global::System.DateTime visitDate)
        {
            tbVisitLog tbVisitLog = new tbVisitLog();
            tbVisitLog.LogNo = logNo;
            tbVisitLog.VisitDate = visitDate;
            return tbVisitLog;
        }

        #endregion

        #region 기본 속성
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal LogNo
        {
            get
            {
                return _LogNo;
            }
            set
            {
                if (_LogNo != value)
                {
                    OnLogNoChanging(value);
                    ReportPropertyChanging("LogNo");
                    _LogNo = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LogNo");
                    OnLogNoChanged();
                }
            }
        }
        private global::System.Decimal _LogNo;
        partial void OnLogNoChanging(global::System.Decimal value);
        partial void OnLogNoChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime VisitDate
        {
            get
            {
                return _VisitDate;
            }
            set
            {
                if (_VisitDate != value)
                {
                    OnVisitDateChanging(value);
                    ReportPropertyChanging("VisitDate");
                    _VisitDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VisitDate");
                    OnVisitDateChanged();
                }
            }
        }
        private global::System.DateTime _VisitDate;
        partial void OnVisitDateChanging(global::System.DateTime value);
        partial void OnVisitDateChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MenuID
        {
            get
            {
                return _MenuID;
            }
            set
            {
                OnMenuIDChanging(value);
                ReportPropertyChanging("MenuID");
                _MenuID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MenuID");
                OnMenuIDChanged();
            }
        }
        private global::System.String _MenuID;
        partial void OnMenuIDChanging(global::System.String value);
        partial void OnMenuIDChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IP
        {
            get
            {
                return _IP;
            }
            set
            {
                OnIPChanging(value);
                ReportPropertyChanging("IP");
                _IP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IP");
                OnIPChanged();
            }
        }
        private global::System.String _IP;
        partial void OnIPChanging(global::System.String value);
        partial void OnIPChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BrowserUserAgent
        {
            get
            {
                return _BrowserUserAgent;
            }
            set
            {
                OnBrowserUserAgentChanging(value);
                ReportPropertyChanging("BrowserUserAgent");
                _BrowserUserAgent = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BrowserUserAgent");
                OnBrowserUserAgentChanged();
            }
        }
        private global::System.String _BrowserUserAgent;
        partial void OnBrowserUserAgentChanging(global::System.String value);
        partial void OnBrowserUserAgentChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BrowserID
        {
            get
            {
                return _BrowserID;
            }
            set
            {
                OnBrowserIDChanging(value);
                ReportPropertyChanging("BrowserID");
                _BrowserID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BrowserID");
                OnBrowserIDChanged();
            }
        }
        private global::System.String _BrowserID;
        partial void OnBrowserIDChanging(global::System.String value);
        partial void OnBrowserIDChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BrowserVer
        {
            get
            {
                return _BrowserVer;
            }
            set
            {
                OnBrowserVerChanging(value);
                ReportPropertyChanging("BrowserVer");
                _BrowserVer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BrowserVer");
                OnBrowserVerChanged();
            }
        }
        private global::System.String _BrowserVer;
        partial void OnBrowserVerChanging(global::System.String value);
        partial void OnBrowserVerChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Platform
        {
            get
            {
                return _Platform;
            }
            set
            {
                OnPlatformChanging(value);
                ReportPropertyChanging("Platform");
                _Platform = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Platform");
                OnPlatformChanged();
            }
        }
        private global::System.String _Platform;
        partial void OnPlatformChanging(global::System.String value);
        partial void OnPlatformChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CookiesSupport
        {
            get
            {
                return _CookiesSupport;
            }
            set
            {
                OnCookiesSupportChanging(value);
                ReportPropertyChanging("CookiesSupport");
                _CookiesSupport = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CookiesSupport");
                OnCookiesSupportChanged();
            }
        }
        private global::System.String _CookiesSupport;
        partial void OnCookiesSupportChanging(global::System.String value);
        partial void OnCookiesSupportChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ActiveXSupport
        {
            get
            {
                return _ActiveXSupport;
            }
            set
            {
                OnActiveXSupportChanging(value);
                ReportPropertyChanging("ActiveXSupport");
                _ActiveXSupport = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ActiveXSupport");
                OnActiveXSupportChanged();
            }
        }
        private global::System.String _ActiveXSupport;
        partial void OnActiveXSupportChanging(global::System.String value);
        partial void OnActiveXSupportChanged();

        #endregion

    
    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// 사용 가능한 메타데이터 설명서가 없습니다.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MVC4BaseModel", Name="fnSYSCodeList_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class fnSYSCodeList_Result : ComplexObject
    {
        #region 팩터리 메서드
    
        /// <summary>
        /// 새 fnSYSCodeList_Result 개체를 만듭니다.
        /// </summary>
        /// <param name="rowNo">RowNo 속성의 초기 값입니다.</param>
        /// <param name="mainCode">MainCode 속성의 초기 값입니다.</param>
        /// <param name="subCode">SubCode 속성의 초기 값입니다.</param>
        /// <param name="useYN">UseYN 속성의 초기 값입니다.</param>
        public static fnSYSCodeList_Result CreatefnSYSCodeList_Result(global::System.Decimal rowNo, global::System.String mainCode, global::System.String subCode, global::System.String useYN)
        {
            fnSYSCodeList_Result fnSYSCodeList_Result = new fnSYSCodeList_Result();
            fnSYSCodeList_Result.RowNo = rowNo;
            fnSYSCodeList_Result.MainCode = mainCode;
            fnSYSCodeList_Result.SubCode = subCode;
            fnSYSCodeList_Result.UseYN = useYN;
            return fnSYSCodeList_Result;
        }

        #endregion

        #region 기본 속성
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal RowNo
        {
            get
            {
                return _RowNo;
            }
            set
            {
                OnRowNoChanging(value);
                ReportPropertyChanging("RowNo");
                _RowNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RowNo");
                OnRowNoChanged();
            }
        }
        private global::System.Decimal _RowNo;
        partial void OnRowNoChanging(global::System.Decimal value);
        partial void OnRowNoChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MainCode
        {
            get
            {
                return _MainCode;
            }
            set
            {
                OnMainCodeChanging(value);
                ReportPropertyChanging("MainCode");
                _MainCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MainCode");
                OnMainCodeChanged();
            }
        }
        private global::System.String _MainCode;
        partial void OnMainCodeChanging(global::System.String value);
        partial void OnMainCodeChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SubCode
        {
            get
            {
                return _SubCode;
            }
            set
            {
                OnSubCodeChanging(value);
                ReportPropertyChanging("SubCode");
                _SubCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SubCode");
                OnSubCodeChanged();
            }
        }
        private global::System.String _SubCode;
        partial void OnSubCodeChanging(global::System.String value);
        partial void OnSubCodeChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UseYN
        {
            get
            {
                return _UseYN;
            }
            set
            {
                OnUseYNChanging(value);
                ReportPropertyChanging("UseYN");
                _UseYN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UseYN");
                OnUseYNChanged();
            }
        }
        private global::System.String _UseYN;
        partial void OnUseYNChanging(global::System.String value);
        partial void OnUseYNChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CodeName
        {
            get
            {
                return _CodeName;
            }
            set
            {
                OnCodeNameChanging(value);
                ReportPropertyChanging("CodeName");
                _CodeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CodeName");
                OnCodeNameChanged();
            }
        }
        private global::System.String _CodeName;
        partial void OnCodeNameChanging(global::System.String value);
        partial void OnCodeNameChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private Nullable<global::System.Int32> _SortOrder;
        partial void OnSortOrderChanging(Nullable<global::System.Int32> value);
        partial void OnSortOrderChanged();

        #endregion

    }
    
    /// <summary>
    /// 사용 가능한 메타데이터 설명서가 없습니다.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MVC4BaseModel", Name="fnSYSUserGetAuthority_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class fnSYSUserGetAuthority_Result : ComplexObject
    {
        #region 팩터리 메서드
    
        /// <summary>
        /// 새 fnSYSUserGetAuthority_Result 개체를 만듭니다.
        /// </summary>
        /// <param name="authorityID">AuthorityID 속성의 초기 값입니다.</param>
        public static fnSYSUserGetAuthority_Result CreatefnSYSUserGetAuthority_Result(global::System.String authorityID)
        {
            fnSYSUserGetAuthority_Result fnSYSUserGetAuthority_Result = new fnSYSUserGetAuthority_Result();
            fnSYSUserGetAuthority_Result.AuthorityID = authorityID;
            return fnSYSUserGetAuthority_Result;
        }

        #endregion

        #region 기본 속성
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AuthorityID
        {
            get
            {
                return _AuthorityID;
            }
            set
            {
                OnAuthorityIDChanging(value);
                ReportPropertyChanging("AuthorityID");
                _AuthorityID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AuthorityID");
                OnAuthorityIDChanged();
            }
        }
        private global::System.String _AuthorityID;
        partial void OnAuthorityIDChanging(global::System.String value);
        partial void OnAuthorityIDChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AuthorityName
        {
            get
            {
                return _AuthorityName;
            }
            set
            {
                OnAuthorityNameChanging(value);
                ReportPropertyChanging("AuthorityName");
                _AuthorityName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AuthorityName");
                OnAuthorityNameChanged();
            }
        }
        private global::System.String _AuthorityName;
        partial void OnAuthorityNameChanging(global::System.String value);
        partial void OnAuthorityNameChanged();

        #endregion

    }
    
    /// <summary>
    /// 사용 가능한 메타데이터 설명서가 없습니다.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MVC4BaseModel", Name="fnSYSUserGetAuthorityGroup_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class fnSYSUserGetAuthorityGroup_Result : ComplexObject
    {
        #region 팩터리 메서드
    
        /// <summary>
        /// 새 fnSYSUserGetAuthorityGroup_Result 개체를 만듭니다.
        /// </summary>
        /// <param name="roleID">RoleID 속성의 초기 값입니다.</param>
        public static fnSYSUserGetAuthorityGroup_Result CreatefnSYSUserGetAuthorityGroup_Result(global::System.String roleID)
        {
            fnSYSUserGetAuthorityGroup_Result fnSYSUserGetAuthorityGroup_Result = new fnSYSUserGetAuthorityGroup_Result();
            fnSYSUserGetAuthorityGroup_Result.RoleID = roleID;
            return fnSYSUserGetAuthorityGroup_Result;
        }

        #endregion

        #region 기본 속성
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private global::System.String _RoleID;
        partial void OnRoleIDChanging(global::System.String value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();

        #endregion

    }
    
    /// <summary>
    /// 사용 가능한 메타데이터 설명서가 없습니다.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MVC4BaseModel", Name="fnSYSUserGetInfo_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class fnSYSUserGetInfo_Result : ComplexObject
    {
        #region 팩터리 메서드
    
        /// <summary>
        /// 새 fnSYSUserGetInfo_Result 개체를 만듭니다.
        /// </summary>
        /// <param name="userID">UserID 속성의 초기 값입니다.</param>
        /// <param name="loginIP">LoginIP 속성의 초기 값입니다.</param>
        /// <param name="loginTime">LoginTime 속성의 초기 값입니다.</param>
        public static fnSYSUserGetInfo_Result CreatefnSYSUserGetInfo_Result(global::System.String userID, global::System.String loginIP, global::System.String loginTime)
        {
            fnSYSUserGetInfo_Result fnSYSUserGetInfo_Result = new fnSYSUserGetInfo_Result();
            fnSYSUserGetInfo_Result.UserID = userID;
            fnSYSUserGetInfo_Result.LoginIP = loginIP;
            fnSYSUserGetInfo_Result.LoginTime = loginTime;
            return fnSYSUserGetInfo_Result;
        }

        #endregion

        #region 기본 속성
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Nickname
        {
            get
            {
                return _Nickname;
            }
            set
            {
                OnNicknameChanging(value);
                ReportPropertyChanging("Nickname");
                _Nickname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Nickname");
                OnNicknameChanged();
            }
        }
        private global::System.String _Nickname;
        partial void OnNicknameChanging(global::System.String value);
        partial void OnNicknameChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoginIP
        {
            get
            {
                return _LoginIP;
            }
            set
            {
                OnLoginIPChanging(value);
                ReportPropertyChanging("LoginIP");
                _LoginIP = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoginIP");
                OnLoginIPChanged();
            }
        }
        private global::System.String _LoginIP;
        partial void OnLoginIPChanging(global::System.String value);
        partial void OnLoginIPChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoginTime
        {
            get
            {
                return _LoginTime;
            }
            set
            {
                OnLoginTimeChanging(value);
                ReportPropertyChanging("LoginTime");
                _LoginTime = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoginTime");
                OnLoginTimeChanged();
            }
        }
        private global::System.String _LoginTime;
        partial void OnLoginTimeChanging(global::System.String value);
        partial void OnLoginTimeChanged();

        #endregion

    }

    #endregion

    
}
